{
  "timestamp": "2025-08-21T20:20:58.349Z",
  "summary": {
    "totalFiles": 1402,
    "duplicatesFound": 3,
    "complexComponents": 269,
    "filesWithUnusedImports": 171,
    "bundleSize": 0,
    "testCoverage": 0
  },
  "findings": {
    "duplicateFiles": [
      {
        "original": {
          "path": "/root/agents/EMERGENCY_FIX_PROFILES.sql",
          "relativePath": "EMERGENCY_FIX_PROFILES.sql",
          "size": 3063,
          "extension": ".sql",
          "content": "-- ============================================\n-- FIX MISSING USER PROFILES\n-- ============================================\n\n-- 1. Create a function to handle new user creation\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger AS $$\nBEGIN\n    INSERT INTO public.profiles (\n        id,\n        email,\n        name,\n        created_at,\n        updated_at\n    )\n    VALUES (\n        new.id,\n        new.email,\n        COALESCE(new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'name', split_part(new.email, '@', 1)),\n        now(),\n        now()\n    )\n    ON CONFLICT (id) DO UPDATE SET\n        email = EXCLUDED.email,\n        updated_at = now();\n    \n    RETURN new;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- 2. Create a trigger to automatically create profiles for new users\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\n\nCREATE TRIGGER on_auth_user_created\n    AFTER INSERT ON auth.users\n    FOR EACH ROW\n    EXECUTE FUNCTION public.handle_new_user();\n\n-- 3. Create profiles for all existing users who don't have one\nINSERT INTO public.profiles (id, email, name, created_at, updated_at)\nSELECT \n    u.id,\n    u.email,\n    COALESCE(\n        u.raw_user_meta_data->>'full_name',\n        u.raw_user_meta_data->>'name',\n        split_part(u.email, '@', 1)\n    ) as name,\n    u.created_at,\n    now() as updated_at\nFROM auth.users u\nLEFT JOIN public.profiles p ON u.id = p.id\nWHERE p.id IS NULL;\n\n-- 4. Update any profiles that have avatar URLs in storage but not in the database\n-- This will fix the current issue where images are uploaded but not linked\nWITH user_avatars AS (\n    SELECT \n        split_part(name, '/', 1)::uuid as user_id,\n        'https://pdikjpfulhhpqpxzpgtu.supabase.co/storage/v1/object/public/profile-images/' || name || '/' || (\n            SELECT f.name \n            FROM storage.objects f \n            WHERE f.bucket_id = 'profile-images' \n            AND f.name LIKE split_part(o.name, '/', 1) || '/%'\n            ORDER BY f.created_at DESC \n            LIMIT 1\n        ) as avatar_url\n    FROM storage.objects o\n    WHERE bucket_id = 'profile-images'\n    AND name NOT LIKE '%/%'  -- Only get folder names (user IDs)\n)\nUPDATE public.profiles p\nSET \n    avatar_url = ua.avatar_url,\n    updated_at = now()\nFROM user_avatars ua\nWHERE p.id = ua.user_id\nAND (p.avatar_url IS NULL OR p.avatar_url = '');\n\n-- 5. Verify the fix\nSELECT \n    'Summary:' as info,\n    COUNT(DISTINCT u.id) as total_users,\n    COUNT(DISTINCT p.id) as users_with_profiles,\n    COUNT(DISTINCT CASE WHEN p.avatar_url IS NOT NULL THEN p.id END) as users_with_avatars\nFROM auth.users u\nLEFT JOIN public.profiles p ON u.id = p.id;\n\n-- 6. Grant necessary permissions\nGRANT USAGE ON SCHEMA public TO postgres, anon, authenticated, service_role;\nGRANT ALL ON public.profiles TO postgres, anon, authenticated, service_role;\n\n-- 7. Show fixed profiles\nSELECT \n    p.id,\n    p.email,\n    p.name,\n    LEFT(p.avatar_url, 50) || '...' as avatar_url_preview,\n    p.updated_at\nFROM public.profiles p\nWHERE p.avatar_url IS NOT NULL\nLIMIT 5;",
          "hash": "2fb6ac584c626199291625ec288c6a82",
          "lines": 102,
          "lastModified": "2025-08-07T14:10:32.514Z"
        },
        "duplicate": {
          "path": "/root/agents/fix-missing-profiles.sql",
          "relativePath": "fix-missing-profiles.sql",
          "size": 3063,
          "extension": ".sql",
          "content": "-- ============================================\n-- FIX MISSING USER PROFILES\n-- ============================================\n\n-- 1. Create a function to handle new user creation\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger AS $$\nBEGIN\n    INSERT INTO public.profiles (\n        id,\n        email,\n        name,\n        created_at,\n        updated_at\n    )\n    VALUES (\n        new.id,\n        new.email,\n        COALESCE(new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'name', split_part(new.email, '@', 1)),\n        now(),\n        now()\n    )\n    ON CONFLICT (id) DO UPDATE SET\n        email = EXCLUDED.email,\n        updated_at = now();\n    \n    RETURN new;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- 2. Create a trigger to automatically create profiles for new users\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\n\nCREATE TRIGGER on_auth_user_created\n    AFTER INSERT ON auth.users\n    FOR EACH ROW\n    EXECUTE FUNCTION public.handle_new_user();\n\n-- 3. Create profiles for all existing users who don't have one\nINSERT INTO public.profiles (id, email, name, created_at, updated_at)\nSELECT \n    u.id,\n    u.email,\n    COALESCE(\n        u.raw_user_meta_data->>'full_name',\n        u.raw_user_meta_data->>'name',\n        split_part(u.email, '@', 1)\n    ) as name,\n    u.created_at,\n    now() as updated_at\nFROM auth.users u\nLEFT JOIN public.profiles p ON u.id = p.id\nWHERE p.id IS NULL;\n\n-- 4. Update any profiles that have avatar URLs in storage but not in the database\n-- This will fix the current issue where images are uploaded but not linked\nWITH user_avatars AS (\n    SELECT \n        split_part(name, '/', 1)::uuid as user_id,\n        'https://pdikjpfulhhpqpxzpgtu.supabase.co/storage/v1/object/public/profile-images/' || name || '/' || (\n            SELECT f.name \n            FROM storage.objects f \n            WHERE f.bucket_id = 'profile-images' \n            AND f.name LIKE split_part(o.name, '/', 1) || '/%'\n            ORDER BY f.created_at DESC \n            LIMIT 1\n        ) as avatar_url\n    FROM storage.objects o\n    WHERE bucket_id = 'profile-images'\n    AND name NOT LIKE '%/%'  -- Only get folder names (user IDs)\n)\nUPDATE public.profiles p\nSET \n    avatar_url = ua.avatar_url,\n    updated_at = now()\nFROM user_avatars ua\nWHERE p.id = ua.user_id\nAND (p.avatar_url IS NULL OR p.avatar_url = '');\n\n-- 5. Verify the fix\nSELECT \n    'Summary:' as info,\n    COUNT(DISTINCT u.id) as total_users,\n    COUNT(DISTINCT p.id) as users_with_profiles,\n    COUNT(DISTINCT CASE WHEN p.avatar_url IS NOT NULL THEN p.id END) as users_with_avatars\nFROM auth.users u\nLEFT JOIN public.profiles p ON u.id = p.id;\n\n-- 6. Grant necessary permissions\nGRANT USAGE ON SCHEMA public TO postgres, anon, authenticated, service_role;\nGRANT ALL ON public.profiles TO postgres, anon, authenticated, service_role;\n\n-- 7. Show fixed profiles\nSELECT \n    p.id,\n    p.email,\n    p.name,\n    LEFT(p.avatar_url, 50) || '...' as avatar_url_preview,\n    p.updated_at\nFROM public.profiles p\nWHERE p.avatar_url IS NOT NULL\nLIMIT 5;",
          "hash": "2fb6ac584c626199291625ec288c6a82",
          "lines": 102,
          "lastModified": "2025-08-07T14:10:32.826Z"
        },
        "reason": "Identical content",
        "savings": 3063
      },
      {
        "original": {
          "path": "/root/agents/fix-google-auth.sql",
          "relativePath": "fix-google-auth.sql",
          "size": 1793,
          "extension": ".sql",
          "content": "-- Fix Google Authentication by ensuring profiles are created for new users\n\n-- 1. Create the trigger function\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger AS $$\nBEGIN\n  INSERT INTO public.profiles (id, email, name, avatar_url)\n  VALUES (\n    new.id,\n    new.email,\n    COALESCE(new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'name', split_part(new.email, '@', 1)),\n    COALESCE(new.raw_user_meta_data->>'avatar_url', new.raw_user_meta_data->>'picture', '')\n  );\n  \n  -- Also create default member role\n  INSERT INTO public.user_roles (user_id, role)\n  VALUES (new.id, 'member')\n  ON CONFLICT (user_id, role) DO NOTHING;\n  \n  RETURN new;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- 2. Create the trigger\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\nCREATE TRIGGER on_auth_user_created\n  AFTER INSERT ON auth.users\n  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();\n\n-- 3. Fix any existing users without profiles (from past OAuth attempts)\nINSERT INTO public.profiles (id, email, name, avatar_url)\nSELECT \n  au.id,\n  au.email,\n  COALESCE(au.raw_user_meta_data->>'full_name', au.raw_user_meta_data->>'name', split_part(au.email, '@', 1)),\n  COALESCE(au.raw_user_meta_data->>'avatar_url', au.raw_user_meta_data->>'picture', '')\nFROM auth.users au\nLEFT JOIN public.profiles p ON p.id = au.id\nWHERE p.id IS NULL;\n\n-- 4. Ensure all users have at least member role\nINSERT INTO public.user_roles (user_id, role)\nSELECT \n  au.id,\n  'member'\nFROM auth.users au\nLEFT JOIN public.user_roles ur ON ur.user_id = au.id AND ur.role = 'member'\nWHERE ur.user_id IS NULL;\n\n-- 5. Grant necessary permissions\nGRANT USAGE ON SCHEMA public TO authenticated;\nGRANT ALL ON public.profiles TO authenticated;\nGRANT ALL ON public.user_roles TO authenticated;",
          "hash": "93e05b6c88ddec399eb589b08d21009f",
          "lines": 53,
          "lastModified": "2025-08-07T14:10:32.826Z"
        },
        "duplicate": {
          "path": "/root/agents/supabase/migrations/20250109_fix_google_auth.sql",
          "relativePath": "supabase/migrations/20250109_fix_google_auth.sql",
          "size": 1793,
          "extension": ".sql",
          "content": "-- Fix Google Authentication by ensuring profiles are created for new users\n\n-- 1. Create the trigger function\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger AS $$\nBEGIN\n  INSERT INTO public.profiles (id, email, name, avatar_url)\n  VALUES (\n    new.id,\n    new.email,\n    COALESCE(new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'name', split_part(new.email, '@', 1)),\n    COALESCE(new.raw_user_meta_data->>'avatar_url', new.raw_user_meta_data->>'picture', '')\n  );\n  \n  -- Also create default member role\n  INSERT INTO public.user_roles (user_id, role)\n  VALUES (new.id, 'member')\n  ON CONFLICT (user_id, role) DO NOTHING;\n  \n  RETURN new;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- 2. Create the trigger\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\nCREATE TRIGGER on_auth_user_created\n  AFTER INSERT ON auth.users\n  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();\n\n-- 3. Fix any existing users without profiles (from past OAuth attempts)\nINSERT INTO public.profiles (id, email, name, avatar_url)\nSELECT \n  au.id,\n  au.email,\n  COALESCE(au.raw_user_meta_data->>'full_name', au.raw_user_meta_data->>'name', split_part(au.email, '@', 1)),\n  COALESCE(au.raw_user_meta_data->>'avatar_url', au.raw_user_meta_data->>'picture', '')\nFROM auth.users au\nLEFT JOIN public.profiles p ON p.id = au.id\nWHERE p.id IS NULL;\n\n-- 4. Ensure all users have at least member role\nINSERT INTO public.user_roles (user_id, role)\nSELECT \n  au.id,\n  'member'\nFROM auth.users au\nLEFT JOIN public.user_roles ur ON ur.user_id = au.id AND ur.role = 'member'\nWHERE ur.user_id IS NULL;\n\n-- 5. Grant necessary permissions\nGRANT USAGE ON SCHEMA public TO authenticated;\nGRANT ALL ON public.profiles TO authenticated;\nGRANT ALL ON public.user_roles TO authenticated;",
          "hash": "93e05b6c88ddec399eb589b08d21009f",
          "lines": 53,
          "lastModified": "2025-08-07T14:10:33.605Z"
        },
        "reason": "Identical content",
        "savings": 1793
      },
      {
        "original": {
          "path": "/root/agents/invoice-migration.sql",
          "relativePath": "invoice-migration.sql",
          "size": 13470,
          "extension": ".sql",
          "content": "-- Complete Invoicing System Setup\n-- This migration ensures all invoicing tables, functions, and policies are properly configured\n\n-- =====================================\n-- ENVIRONMENT VARIABLES CHECK\n-- =====================================\n-- Ensure the following are set in your Supabase project settings:\n-- XERO_CLIENT_ID: Your Xero OAuth2 Client ID\n-- XERO_CLIENT_SECRET: Your Xero OAuth2 Client Secret\n\n-- =====================================\n-- MISSING INDEXES\n-- =====================================\n\n-- Add indexes for better query performance\nCREATE INDEX IF NOT EXISTS idx_invoices_promoter_id ON public.invoices(promoter_id);\nCREATE INDEX IF NOT EXISTS idx_invoices_comedian_id ON public.invoices(comedian_id);\nCREATE INDEX IF NOT EXISTS idx_invoices_status ON public.invoices(status);\nCREATE INDEX IF NOT EXISTS idx_invoices_due_date ON public.invoices(due_date);\nCREATE INDEX IF NOT EXISTS idx_invoices_invoice_number ON public.invoices(invoice_number);\n\nCREATE INDEX IF NOT EXISTS idx_invoice_items_invoice_id ON public.invoice_items(invoice_id);\nCREATE INDEX IF NOT EXISTS idx_invoice_recipients_invoice_id ON public.invoice_recipients(invoice_id);\nCREATE INDEX IF NOT EXISTS idx_invoice_payments_invoice_id ON public.invoice_payments(invoice_id);\n\nCREATE INDEX IF NOT EXISTS idx_xero_invoices_invoice_id ON public.xero_invoices(invoice_id);\nCREATE INDEX IF NOT EXISTS idx_xero_invoices_xero_invoice_id ON public.xero_invoices(xero_invoice_id);\n\n-- =====================================\n-- MISSING COLUMNS\n-- =====================================\n\n-- Add missing columns to invoices table\nALTER TABLE public.invoices \nADD COLUMN IF NOT EXISTS xero_invoice_id TEXT,\nADD COLUMN IF NOT EXISTS last_synced_at TIMESTAMPTZ,\nADD COLUMN IF NOT EXISTS paid_at TIMESTAMPTZ,\nADD COLUMN IF NOT EXISTS created_by UUID REFERENCES auth.users(id);\n\n-- Add missing columns to xero_integrations\nALTER TABLE public.xero_integrations\nADD COLUMN IF NOT EXISTS tenant_name TEXT,\nADD COLUMN IF NOT EXISTS token_expires_at TIMESTAMPTZ;\n\n-- =====================================\n-- FUNCTIONS FOR INVOICE OPERATIONS\n-- =====================================\n\n-- Function to generate next invoice number\nCREATE OR REPLACE FUNCTION public.generate_invoice_number(\n  p_invoice_type TEXT,\n  p_date TIMESTAMPTZ DEFAULT NOW()\n)\nRETURNS TEXT\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_prefix TEXT;\n  v_year TEXT;\n  v_month TEXT;\n  v_sequence INT;\n  v_invoice_number TEXT;\nBEGIN\n  -- Determine prefix\n  v_prefix := CASE p_invoice_type\n    WHEN 'promoter' THEN 'PRO'\n    WHEN 'comedian' THEN 'COM'\n    ELSE 'INV'\n  END;\n  \n  -- Get year and month\n  v_year := TO_CHAR(p_date, 'YYYY');\n  v_month := TO_CHAR(p_date, 'MM');\n  \n  -- Get next sequence number\n  SELECT COALESCE(MAX(\n    CAST(\n      SUBSTRING(invoice_number FROM '[0-9]+$') AS INTEGER\n    )\n  ), 0) + 1\n  INTO v_sequence\n  FROM public.invoices\n  WHERE invoice_number LIKE v_prefix || '-' || v_year || v_month || '-%';\n  \n  -- Generate invoice number\n  v_invoice_number := v_prefix || '-' || v_year || v_month || '-' || LPAD(v_sequence::TEXT, 4, '0');\n  \n  RETURN v_invoice_number;\nEND;\n$$;\n\n-- Function to calculate invoice totals\nCREATE OR REPLACE FUNCTION public.calculate_invoice_totals(p_invoice_id UUID)\nRETURNS TABLE(\n  subtotal DECIMAL(10,2),\n  tax_amount DECIMAL(10,2),\n  total_amount DECIMAL(10,2)\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_tax_rate DECIMAL(5,2);\n  v_tax_treatment TEXT;\nBEGIN\n  -- Get tax settings from invoice\n  SELECT tax_rate, tax_treatment\n  INTO v_tax_rate, v_tax_treatment\n  FROM public.invoices\n  WHERE id = p_invoice_id;\n  \n  -- Calculate totals based on tax treatment\n  IF v_tax_treatment = 'inclusive' THEN\n    -- Tax is included in the item totals\n    SELECT \n      SUM(total) - SUM(total * v_tax_rate / (100 + v_tax_rate)),\n      SUM(total * v_tax_rate / (100 + v_tax_rate)),\n      SUM(total)\n    INTO subtotal, tax_amount, total_amount\n    FROM public.invoice_items\n    WHERE invoice_id = p_invoice_id;\n  ELSIF v_tax_treatment = 'exclusive' THEN\n    -- Tax is added to the item totals\n    SELECT \n      SUM(total),\n      SUM(total * v_tax_rate / 100),\n      SUM(total * (1 + v_tax_rate / 100))\n    INTO subtotal, tax_amount, total_amount\n    FROM public.invoice_items\n    WHERE invoice_id = p_invoice_id;\n  ELSE\n    -- No tax\n    SELECT \n      SUM(total),\n      0,\n      SUM(total)\n    INTO subtotal, tax_amount, total_amount\n    FROM public.invoice_items\n    WHERE invoice_id = p_invoice_id;\n  END IF;\n  \n  RETURN QUERY SELECT \n    COALESCE(subtotal, 0)::DECIMAL(10,2),\n    COALESCE(tax_amount, 0)::DECIMAL(10,2),\n    COALESCE(total_amount, 0)::DECIMAL(10,2);\nEND;\n$$;\n\n-- Function to update invoice status based on payments\nCREATE OR REPLACE FUNCTION public.update_invoice_payment_status()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_total_paid DECIMAL(10,2);\n  v_invoice_total DECIMAL(10,2);\nBEGIN\n  -- Calculate total payments\n  SELECT COALESCE(SUM(amount), 0)\n  INTO v_total_paid\n  FROM public.invoice_payments\n  WHERE invoice_id = NEW.invoice_id;\n  \n  -- Get invoice total\n  SELECT total_amount\n  INTO v_invoice_total\n  FROM public.invoices\n  WHERE id = NEW.invoice_id;\n  \n  -- Update invoice status if fully paid\n  IF v_total_paid >= v_invoice_total THEN\n    UPDATE public.invoices\n    SET \n      status = 'paid',\n      paid_at = NOW()\n    WHERE id = NEW.invoice_id;\n  END IF;\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Create trigger for payment status updates\nDROP TRIGGER IF EXISTS update_invoice_payment_status_trigger ON public.invoice_payments;\nCREATE TRIGGER update_invoice_payment_status_trigger\nAFTER INSERT OR UPDATE ON public.invoice_payments\nFOR EACH ROW\nEXECUTE FUNCTION public.update_invoice_payment_status();\n\n-- Function to check and update overdue invoices\nCREATE OR REPLACE FUNCTION public.check_overdue_invoices()\nRETURNS TABLE(updated_count INT)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  WITH updated AS (\n    UPDATE public.invoices\n    SET status = 'overdue'\n    WHERE status = 'sent'\n    AND due_date < NOW()\n    RETURNING id\n  )\n  SELECT COUNT(*)::INT\n  INTO updated_count\n  FROM updated;\n  \n  RETURN QUERY SELECT updated_count;\nEND;\n$$;\n\n-- =====================================\n-- XERO WEBHOOK HANDLING\n-- =====================================\n\n-- Table for Xero webhook events\nCREATE TABLE IF NOT EXISTS public.xero_webhook_events (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  event_id TEXT UNIQUE NOT NULL,\n  event_type TEXT NOT NULL,\n  resource_type TEXT NOT NULL,\n  resource_id TEXT NOT NULL,\n  tenant_id TEXT NOT NULL,\n  event_date TIMESTAMPTZ NOT NULL,\n  processed BOOLEAN DEFAULT FALSE,\n  processed_at TIMESTAMPTZ,\n  error TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Function to process Xero webhook\nCREATE OR REPLACE FUNCTION public.process_xero_webhook(\n  p_events JSONB\n)\nRETURNS JSONB\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_event JSONB;\n  v_result JSONB = '[]'::JSONB;\nBEGIN\n  FOR v_event IN SELECT * FROM jsonb_array_elements(p_events)\n  LOOP\n    -- Store webhook event\n    INSERT INTO public.xero_webhook_events (\n      event_id,\n      event_type,\n      resource_type,\n      resource_id,\n      tenant_id,\n      event_date\n    ) VALUES (\n      v_event->>'eventId',\n      v_event->>'eventType',\n      v_event->>'resourceType',\n      v_event->>'resourceId',\n      v_event->>'tenantId',\n      (v_event->>'eventDateUtc')::TIMESTAMPTZ\n    )\n    ON CONFLICT (event_id) DO NOTHING;\n    \n    -- Add to result\n    v_result = v_result || jsonb_build_object(\n      'eventId', v_event->>'eventId',\n      'status', 'received'\n    );\n  END LOOP;\n  \n  RETURN v_result;\nEND;\n$$;\n\n-- =====================================\n-- INVOICE AUTOMATION\n-- =====================================\n\n-- Function to create invoice from event ticket sales\nCREATE OR REPLACE FUNCTION public.create_invoice_from_event(\n  p_event_id UUID,\n  p_recipient_type TEXT,\n  p_recipient_id UUID\n)\nRETURNS UUID\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_invoice_id UUID;\n  v_event RECORD;\n  v_total_sales DECIMAL(10,2);\n  v_invoice_type TEXT;\n  v_invoice_number TEXT;\nBEGIN\n  -- Get event details\n  SELECT * INTO v_event\n  FROM public.events\n  WHERE id = p_event_id;\n  \n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'Event not found';\n  END IF;\n  \n  -- Calculate total sales\n  SELECT COALESCE(SUM(net_revenue), 0)\n  INTO v_total_sales\n  FROM public.ticket_sales\n  WHERE event_id = p_event_id;\n  \n  -- Determine invoice type\n  v_invoice_type := p_recipient_type;\n  \n  -- Generate invoice number\n  v_invoice_number := generate_invoice_number(v_invoice_type);\n  \n  -- Create invoice\n  INSERT INTO public.invoices (\n    invoice_type,\n    invoice_number,\n    promoter_id,\n    comedian_id,\n    sender_name,\n    sender_email,\n    issue_date,\n    due_date,\n    currency,\n    tax_rate,\n    tax_treatment,\n    subtotal_amount,\n    tax_amount,\n    total_amount,\n    notes,\n    status,\n    created_by\n  ) VALUES (\n    v_invoice_type,\n    v_invoice_number,\n    CASE WHEN p_recipient_type = 'promoter' THEN p_recipient_id ELSE NULL END,\n    CASE WHEN p_recipient_type = 'comedian' THEN p_recipient_id ELSE NULL END,\n    'Stand Up Sydney',\n    'billing@standupSydney.com',\n    NOW(),\n    NOW() + INTERVAL '30 days',\n    'AUD',\n    10,\n    'inclusive',\n    v_total_sales * 0.909, -- Assuming 10% GST inclusive\n    v_total_sales * 0.091,\n    v_total_sales,\n    'Invoice for event: ' || v_event.title,\n    'draft',\n    auth.uid()\n  )\n  RETURNING id INTO v_invoice_id;\n  \n  -- Add line items for each ticket platform\n  INSERT INTO public.invoice_items (\n    invoice_id,\n    description,\n    quantity,\n    unit_price,\n    subtotal,\n    tax_amount,\n    total\n  )\n  SELECT \n    v_invoice_id,\n    'Ticket Sales - ' || platform || ' (' || SUM(quantity_sold) || ' tickets)',\n    SUM(quantity_sold),\n    AVG(gross_revenue / NULLIF(quantity_sold, 0)),\n    SUM(net_revenue) * 0.909,\n    SUM(net_revenue) * 0.091,\n    SUM(net_revenue)\n  FROM public.ticket_sales\n  WHERE event_id = p_event_id\n  GROUP BY platform;\n  \n  -- Add recipient\n  INSERT INTO public.invoice_recipients (\n    invoice_id,\n    recipient_name,\n    recipient_email,\n    recipient_type\n  )\n  SELECT \n    v_invoice_id,\n    COALESCE(p.full_name, p.email),\n    p.email,\n    'individual'\n  FROM public.profiles p\n  WHERE p.id = p_recipient_id;\n  \n  RETURN v_invoice_id;\nEND;\n$$;\n\n-- =====================================\n-- ENHANCED RLS POLICIES\n-- =====================================\n\n-- Update RLS policies for better access control\nDROP POLICY IF EXISTS \"Invoice creators can manage their invoices\" ON public.invoices;\nCREATE POLICY \"Invoice creators can manage their invoices\" ON public.invoices\nFOR ALL TO authenticated\nUSING (\n  created_by = auth.uid() OR\n  promoter_id = auth.uid() OR\n  comedian_id = auth.uid() OR\n  EXISTS (\n    SELECT 1 FROM public.user_roles\n    WHERE user_id = auth.uid()\n    AND role IN ('admin', 'promoter', 'comedian')\n  )\n);\n\n-- Policy for invoice items\nDROP POLICY IF EXISTS \"Users can view invoice items for their invoices\" ON public.invoice_items;\nCREATE POLICY \"Users can view invoice items for their invoices\" ON public.invoice_items\nFOR SELECT TO authenticated\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.invoices\n    WHERE id = invoice_items.invoice_id\n    AND (\n      created_by = auth.uid() OR\n      promoter_id = auth.uid() OR\n      comedian_id = auth.uid()\n    )\n  )\n);\n\n-- Policy for Xero integrations\nDROP POLICY IF EXISTS \"Users can manage their Xero integrations\" ON public.xero_integrations;\nCREATE POLICY \"Users can manage their Xero integrations\" ON public.xero_integrations\nFOR ALL TO authenticated\nUSING (user_id = auth.uid());\n\n-- =====================================\n-- SAMPLE DATA FOR TESTING\n-- =====================================\n\n-- Create sample invoice templates\nINSERT INTO public.recurring_invoices (\n  invoice_type,\n  promoter_id,\n  frequency,\n  amount,\n  currency,\n  tax_rate,\n  description,\n  sender_name,\n  sender_email,\n  next_invoice_date,\n  is_active\n)\nSELECT \n  'promoter',\n  p.id,\n  'monthly',\n  500.00,\n  'AUD',\n  10,\n  'Monthly platform subscription',\n  'Stand Up Sydney',\n  'billing@standupSydney.com',\n  DATE_TRUNC('month', NOW() + INTERVAL '1 month'),\n  true\nFROM public.profiles p\nJOIN public.user_roles ur ON ur.user_id = p.id\nWHERE ur.role = 'promoter'\nLIMIT 1\nON CONFLICT DO NOTHING;\n\n-- Grant necessary permissions\nGRANT ALL ON public.invoices TO authenticated;\nGRANT ALL ON public.invoice_items TO authenticated;\nGRANT ALL ON public.invoice_recipients TO authenticated;\nGRANT ALL ON public.invoice_payments TO authenticated;\nGRANT ALL ON public.xero_integrations TO authenticated;\nGRANT ALL ON public.xero_invoices TO authenticated;\nGRANT ALL ON public.xero_webhook_events TO authenticated;\nGRANT ALL ON public.recurring_invoices TO authenticated;\n\nGRANT EXECUTE ON FUNCTION public.generate_invoice_number TO authenticated;\nGRANT EXECUTE ON FUNCTION public.calculate_invoice_totals TO authenticated;\nGRANT EXECUTE ON FUNCTION public.check_overdue_invoices TO authenticated;\nGRANT EXECUTE ON FUNCTION public.create_invoice_from_event TO authenticated;\nGRANT EXECUTE ON FUNCTION public.process_xero_webhook TO authenticated;\n\n-- Create Edge Function for Xero OAuth (to be deployed separately)\nCOMMENT ON FUNCTION public.process_xero_webhook IS 'Processes Xero webhook events. For OAuth token exchange, use Supabase Edge Functions with environment variables for XERO_CLIENT_ID and XERO_CLIENT_SECRET';",
          "hash": "c11c63a72438981cf164f7d10fd5d059",
          "lines": 493,
          "lastModified": "2025-08-07T14:10:32.880Z"
        },
        "duplicate": {
          "path": "/root/agents/supabase/migrations/20250706230000_complete_invoicing_system.sql",
          "relativePath": "supabase/migrations/20250706230000_complete_invoicing_system.sql",
          "size": 13470,
          "extension": ".sql",
          "content": "-- Complete Invoicing System Setup\n-- This migration ensures all invoicing tables, functions, and policies are properly configured\n\n-- =====================================\n-- ENVIRONMENT VARIABLES CHECK\n-- =====================================\n-- Ensure the following are set in your Supabase project settings:\n-- XERO_CLIENT_ID: Your Xero OAuth2 Client ID\n-- XERO_CLIENT_SECRET: Your Xero OAuth2 Client Secret\n\n-- =====================================\n-- MISSING INDEXES\n-- =====================================\n\n-- Add indexes for better query performance\nCREATE INDEX IF NOT EXISTS idx_invoices_promoter_id ON public.invoices(promoter_id);\nCREATE INDEX IF NOT EXISTS idx_invoices_comedian_id ON public.invoices(comedian_id);\nCREATE INDEX IF NOT EXISTS idx_invoices_status ON public.invoices(status);\nCREATE INDEX IF NOT EXISTS idx_invoices_due_date ON public.invoices(due_date);\nCREATE INDEX IF NOT EXISTS idx_invoices_invoice_number ON public.invoices(invoice_number);\n\nCREATE INDEX IF NOT EXISTS idx_invoice_items_invoice_id ON public.invoice_items(invoice_id);\nCREATE INDEX IF NOT EXISTS idx_invoice_recipients_invoice_id ON public.invoice_recipients(invoice_id);\nCREATE INDEX IF NOT EXISTS idx_invoice_payments_invoice_id ON public.invoice_payments(invoice_id);\n\nCREATE INDEX IF NOT EXISTS idx_xero_invoices_invoice_id ON public.xero_invoices(invoice_id);\nCREATE INDEX IF NOT EXISTS idx_xero_invoices_xero_invoice_id ON public.xero_invoices(xero_invoice_id);\n\n-- =====================================\n-- MISSING COLUMNS\n-- =====================================\n\n-- Add missing columns to invoices table\nALTER TABLE public.invoices \nADD COLUMN IF NOT EXISTS xero_invoice_id TEXT,\nADD COLUMN IF NOT EXISTS last_synced_at TIMESTAMPTZ,\nADD COLUMN IF NOT EXISTS paid_at TIMESTAMPTZ,\nADD COLUMN IF NOT EXISTS created_by UUID REFERENCES auth.users(id);\n\n-- Add missing columns to xero_integrations\nALTER TABLE public.xero_integrations\nADD COLUMN IF NOT EXISTS tenant_name TEXT,\nADD COLUMN IF NOT EXISTS token_expires_at TIMESTAMPTZ;\n\n-- =====================================\n-- FUNCTIONS FOR INVOICE OPERATIONS\n-- =====================================\n\n-- Function to generate next invoice number\nCREATE OR REPLACE FUNCTION public.generate_invoice_number(\n  p_invoice_type TEXT,\n  p_date TIMESTAMPTZ DEFAULT NOW()\n)\nRETURNS TEXT\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_prefix TEXT;\n  v_year TEXT;\n  v_month TEXT;\n  v_sequence INT;\n  v_invoice_number TEXT;\nBEGIN\n  -- Determine prefix\n  v_prefix := CASE p_invoice_type\n    WHEN 'promoter' THEN 'PRO'\n    WHEN 'comedian' THEN 'COM'\n    ELSE 'INV'\n  END;\n  \n  -- Get year and month\n  v_year := TO_CHAR(p_date, 'YYYY');\n  v_month := TO_CHAR(p_date, 'MM');\n  \n  -- Get next sequence number\n  SELECT COALESCE(MAX(\n    CAST(\n      SUBSTRING(invoice_number FROM '[0-9]+$') AS INTEGER\n    )\n  ), 0) + 1\n  INTO v_sequence\n  FROM public.invoices\n  WHERE invoice_number LIKE v_prefix || '-' || v_year || v_month || '-%';\n  \n  -- Generate invoice number\n  v_invoice_number := v_prefix || '-' || v_year || v_month || '-' || LPAD(v_sequence::TEXT, 4, '0');\n  \n  RETURN v_invoice_number;\nEND;\n$$;\n\n-- Function to calculate invoice totals\nCREATE OR REPLACE FUNCTION public.calculate_invoice_totals(p_invoice_id UUID)\nRETURNS TABLE(\n  subtotal DECIMAL(10,2),\n  tax_amount DECIMAL(10,2),\n  total_amount DECIMAL(10,2)\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_tax_rate DECIMAL(5,2);\n  v_tax_treatment TEXT;\nBEGIN\n  -- Get tax settings from invoice\n  SELECT tax_rate, tax_treatment\n  INTO v_tax_rate, v_tax_treatment\n  FROM public.invoices\n  WHERE id = p_invoice_id;\n  \n  -- Calculate totals based on tax treatment\n  IF v_tax_treatment = 'inclusive' THEN\n    -- Tax is included in the item totals\n    SELECT \n      SUM(total) - SUM(total * v_tax_rate / (100 + v_tax_rate)),\n      SUM(total * v_tax_rate / (100 + v_tax_rate)),\n      SUM(total)\n    INTO subtotal, tax_amount, total_amount\n    FROM public.invoice_items\n    WHERE invoice_id = p_invoice_id;\n  ELSIF v_tax_treatment = 'exclusive' THEN\n    -- Tax is added to the item totals\n    SELECT \n      SUM(total),\n      SUM(total * v_tax_rate / 100),\n      SUM(total * (1 + v_tax_rate / 100))\n    INTO subtotal, tax_amount, total_amount\n    FROM public.invoice_items\n    WHERE invoice_id = p_invoice_id;\n  ELSE\n    -- No tax\n    SELECT \n      SUM(total),\n      0,\n      SUM(total)\n    INTO subtotal, tax_amount, total_amount\n    FROM public.invoice_items\n    WHERE invoice_id = p_invoice_id;\n  END IF;\n  \n  RETURN QUERY SELECT \n    COALESCE(subtotal, 0)::DECIMAL(10,2),\n    COALESCE(tax_amount, 0)::DECIMAL(10,2),\n    COALESCE(total_amount, 0)::DECIMAL(10,2);\nEND;\n$$;\n\n-- Function to update invoice status based on payments\nCREATE OR REPLACE FUNCTION public.update_invoice_payment_status()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_total_paid DECIMAL(10,2);\n  v_invoice_total DECIMAL(10,2);\nBEGIN\n  -- Calculate total payments\n  SELECT COALESCE(SUM(amount), 0)\n  INTO v_total_paid\n  FROM public.invoice_payments\n  WHERE invoice_id = NEW.invoice_id;\n  \n  -- Get invoice total\n  SELECT total_amount\n  INTO v_invoice_total\n  FROM public.invoices\n  WHERE id = NEW.invoice_id;\n  \n  -- Update invoice status if fully paid\n  IF v_total_paid >= v_invoice_total THEN\n    UPDATE public.invoices\n    SET \n      status = 'paid',\n      paid_at = NOW()\n    WHERE id = NEW.invoice_id;\n  END IF;\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Create trigger for payment status updates\nDROP TRIGGER IF EXISTS update_invoice_payment_status_trigger ON public.invoice_payments;\nCREATE TRIGGER update_invoice_payment_status_trigger\nAFTER INSERT OR UPDATE ON public.invoice_payments\nFOR EACH ROW\nEXECUTE FUNCTION public.update_invoice_payment_status();\n\n-- Function to check and update overdue invoices\nCREATE OR REPLACE FUNCTION public.check_overdue_invoices()\nRETURNS TABLE(updated_count INT)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  WITH updated AS (\n    UPDATE public.invoices\n    SET status = 'overdue'\n    WHERE status = 'sent'\n    AND due_date < NOW()\n    RETURNING id\n  )\n  SELECT COUNT(*)::INT\n  INTO updated_count\n  FROM updated;\n  \n  RETURN QUERY SELECT updated_count;\nEND;\n$$;\n\n-- =====================================\n-- XERO WEBHOOK HANDLING\n-- =====================================\n\n-- Table for Xero webhook events\nCREATE TABLE IF NOT EXISTS public.xero_webhook_events (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  event_id TEXT UNIQUE NOT NULL,\n  event_type TEXT NOT NULL,\n  resource_type TEXT NOT NULL,\n  resource_id TEXT NOT NULL,\n  tenant_id TEXT NOT NULL,\n  event_date TIMESTAMPTZ NOT NULL,\n  processed BOOLEAN DEFAULT FALSE,\n  processed_at TIMESTAMPTZ,\n  error TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Function to process Xero webhook\nCREATE OR REPLACE FUNCTION public.process_xero_webhook(\n  p_events JSONB\n)\nRETURNS JSONB\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_event JSONB;\n  v_result JSONB = '[]'::JSONB;\nBEGIN\n  FOR v_event IN SELECT * FROM jsonb_array_elements(p_events)\n  LOOP\n    -- Store webhook event\n    INSERT INTO public.xero_webhook_events (\n      event_id,\n      event_type,\n      resource_type,\n      resource_id,\n      tenant_id,\n      event_date\n    ) VALUES (\n      v_event->>'eventId',\n      v_event->>'eventType',\n      v_event->>'resourceType',\n      v_event->>'resourceId',\n      v_event->>'tenantId',\n      (v_event->>'eventDateUtc')::TIMESTAMPTZ\n    )\n    ON CONFLICT (event_id) DO NOTHING;\n    \n    -- Add to result\n    v_result = v_result || jsonb_build_object(\n      'eventId', v_event->>'eventId',\n      'status', 'received'\n    );\n  END LOOP;\n  \n  RETURN v_result;\nEND;\n$$;\n\n-- =====================================\n-- INVOICE AUTOMATION\n-- =====================================\n\n-- Function to create invoice from event ticket sales\nCREATE OR REPLACE FUNCTION public.create_invoice_from_event(\n  p_event_id UUID,\n  p_recipient_type TEXT,\n  p_recipient_id UUID\n)\nRETURNS UUID\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n  v_invoice_id UUID;\n  v_event RECORD;\n  v_total_sales DECIMAL(10,2);\n  v_invoice_type TEXT;\n  v_invoice_number TEXT;\nBEGIN\n  -- Get event details\n  SELECT * INTO v_event\n  FROM public.events\n  WHERE id = p_event_id;\n  \n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'Event not found';\n  END IF;\n  \n  -- Calculate total sales\n  SELECT COALESCE(SUM(net_revenue), 0)\n  INTO v_total_sales\n  FROM public.ticket_sales\n  WHERE event_id = p_event_id;\n  \n  -- Determine invoice type\n  v_invoice_type := p_recipient_type;\n  \n  -- Generate invoice number\n  v_invoice_number := generate_invoice_number(v_invoice_type);\n  \n  -- Create invoice\n  INSERT INTO public.invoices (\n    invoice_type,\n    invoice_number,\n    promoter_id,\n    comedian_id,\n    sender_name,\n    sender_email,\n    issue_date,\n    due_date,\n    currency,\n    tax_rate,\n    tax_treatment,\n    subtotal_amount,\n    tax_amount,\n    total_amount,\n    notes,\n    status,\n    created_by\n  ) VALUES (\n    v_invoice_type,\n    v_invoice_number,\n    CASE WHEN p_recipient_type = 'promoter' THEN p_recipient_id ELSE NULL END,\n    CASE WHEN p_recipient_type = 'comedian' THEN p_recipient_id ELSE NULL END,\n    'Stand Up Sydney',\n    'billing@standupSydney.com',\n    NOW(),\n    NOW() + INTERVAL '30 days',\n    'AUD',\n    10,\n    'inclusive',\n    v_total_sales * 0.909, -- Assuming 10% GST inclusive\n    v_total_sales * 0.091,\n    v_total_sales,\n    'Invoice for event: ' || v_event.title,\n    'draft',\n    auth.uid()\n  )\n  RETURNING id INTO v_invoice_id;\n  \n  -- Add line items for each ticket platform\n  INSERT INTO public.invoice_items (\n    invoice_id,\n    description,\n    quantity,\n    unit_price,\n    subtotal,\n    tax_amount,\n    total\n  )\n  SELECT \n    v_invoice_id,\n    'Ticket Sales - ' || platform || ' (' || SUM(quantity_sold) || ' tickets)',\n    SUM(quantity_sold),\n    AVG(gross_revenue / NULLIF(quantity_sold, 0)),\n    SUM(net_revenue) * 0.909,\n    SUM(net_revenue) * 0.091,\n    SUM(net_revenue)\n  FROM public.ticket_sales\n  WHERE event_id = p_event_id\n  GROUP BY platform;\n  \n  -- Add recipient\n  INSERT INTO public.invoice_recipients (\n    invoice_id,\n    recipient_name,\n    recipient_email,\n    recipient_type\n  )\n  SELECT \n    v_invoice_id,\n    COALESCE(p.full_name, p.email),\n    p.email,\n    'individual'\n  FROM public.profiles p\n  WHERE p.id = p_recipient_id;\n  \n  RETURN v_invoice_id;\nEND;\n$$;\n\n-- =====================================\n-- ENHANCED RLS POLICIES\n-- =====================================\n\n-- Update RLS policies for better access control\nDROP POLICY IF EXISTS \"Invoice creators can manage their invoices\" ON public.invoices;\nCREATE POLICY \"Invoice creators can manage their invoices\" ON public.invoices\nFOR ALL TO authenticated\nUSING (\n  created_by = auth.uid() OR\n  promoter_id = auth.uid() OR\n  comedian_id = auth.uid() OR\n  EXISTS (\n    SELECT 1 FROM public.user_roles\n    WHERE user_id = auth.uid()\n    AND role IN ('admin', 'promoter', 'comedian')\n  )\n);\n\n-- Policy for invoice items\nDROP POLICY IF EXISTS \"Users can view invoice items for their invoices\" ON public.invoice_items;\nCREATE POLICY \"Users can view invoice items for their invoices\" ON public.invoice_items\nFOR SELECT TO authenticated\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.invoices\n    WHERE id = invoice_items.invoice_id\n    AND (\n      created_by = auth.uid() OR\n      promoter_id = auth.uid() OR\n      comedian_id = auth.uid()\n    )\n  )\n);\n\n-- Policy for Xero integrations\nDROP POLICY IF EXISTS \"Users can manage their Xero integrations\" ON public.xero_integrations;\nCREATE POLICY \"Users can manage their Xero integrations\" ON public.xero_integrations\nFOR ALL TO authenticated\nUSING (user_id = auth.uid());\n\n-- =====================================\n-- SAMPLE DATA FOR TESTING\n-- =====================================\n\n-- Create sample invoice templates\nINSERT INTO public.recurring_invoices (\n  invoice_type,\n  promoter_id,\n  frequency,\n  amount,\n  currency,\n  tax_rate,\n  description,\n  sender_name,\n  sender_email,\n  next_invoice_date,\n  is_active\n)\nSELECT \n  'promoter',\n  p.id,\n  'monthly',\n  500.00,\n  'AUD',\n  10,\n  'Monthly platform subscription',\n  'Stand Up Sydney',\n  'billing@standupSydney.com',\n  DATE_TRUNC('month', NOW() + INTERVAL '1 month'),\n  true\nFROM public.profiles p\nJOIN public.user_roles ur ON ur.user_id = p.id\nWHERE ur.role = 'promoter'\nLIMIT 1\nON CONFLICT DO NOTHING;\n\n-- Grant necessary permissions\nGRANT ALL ON public.invoices TO authenticated;\nGRANT ALL ON public.invoice_items TO authenticated;\nGRANT ALL ON public.invoice_recipients TO authenticated;\nGRANT ALL ON public.invoice_payments TO authenticated;\nGRANT ALL ON public.xero_integrations TO authenticated;\nGRANT ALL ON public.xero_invoices TO authenticated;\nGRANT ALL ON public.xero_webhook_events TO authenticated;\nGRANT ALL ON public.recurring_invoices TO authenticated;\n\nGRANT EXECUTE ON FUNCTION public.generate_invoice_number TO authenticated;\nGRANT EXECUTE ON FUNCTION public.calculate_invoice_totals TO authenticated;\nGRANT EXECUTE ON FUNCTION public.check_overdue_invoices TO authenticated;\nGRANT EXECUTE ON FUNCTION public.create_invoice_from_event TO authenticated;\nGRANT EXECUTE ON FUNCTION public.process_xero_webhook TO authenticated;\n\n-- Create Edge Function for Xero OAuth (to be deployed separately)\nCOMMENT ON FUNCTION public.process_xero_webhook IS 'Processes Xero webhook events. For OAuth token exchange, use Supabase Edge Functions with environment variables for XERO_CLIENT_ID and XERO_CLIENT_SECRET';",
          "hash": "c11c63a72438981cf164f7d10fd5d059",
          "lines": 493,
          "lastModified": "2025-08-07T14:10:33.658Z"
        },
        "reason": "Identical content",
        "savings": 13470
      }
    ],
    "largeComponents": [
      {
        "file": "src/App.tsx",
        "complexity": 17,
        "lines": 212,
        "functions": 12,
        "hooks": 9,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/AddressAutocomplete.tsx",
        "complexity": 38,
        "lines": 199,
        "functions": 12,
        "hooks": 16,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/BookComedianForm.tsx",
        "complexity": 27,
        "lines": 289,
        "functions": 6,
        "hooks": 16,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/BrandingCustomization.tsx",
        "complexity": 15,
        "lines": 311,
        "functions": 7,
        "hooks": 2,
        "recommendations": [
          "Split into smaller components (file has 311 lines)"
        ]
      },
      {
        "file": "src/components/CalendarSync.tsx",
        "complexity": 34,
        "lines": 347,
        "functions": 18,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 347 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/CalendarView.tsx",
        "complexity": 36,
        "lines": 222,
        "functions": 17,
        "hooks": 11,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/CardCalendar.tsx",
        "complexity": 28,
        "lines": 96,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ComedianCard.tsx",
        "complexity": 16,
        "lines": 169,
        "functions": 6,
        "hooks": 6,
        "recommendations": []
      },
      {
        "file": "src/components/ComedianList.tsx",
        "complexity": 16,
        "lines": 65,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/ComedianMarketplace.tsx",
        "complexity": 33,
        "lines": 248,
        "functions": 5,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/CommissionSplitManager.tsx",
        "complexity": 58,
        "lines": 547,
        "functions": 21,
        "hooks": 17,
        "recommendations": [
          "Split into smaller components (file has 547 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ContactInformation.tsx",
        "complexity": 21,
        "lines": 276,
        "functions": 13,
        "hooks": 5,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ContactRequests.tsx",
        "complexity": 31,
        "lines": 305,
        "functions": 12,
        "hooks": 12,
        "recommendations": [
          "Split into smaller components (file has 305 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/CreateEventForm.tsx",
        "complexity": 23,
        "lines": 148,
        "functions": 4,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/CreateEventFormEnhanced.tsx",
        "complexity": 32,
        "lines": 345,
        "functions": 15,
        "hooks": 22,
        "recommendations": [
          "Split into smaller components (file has 345 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/CustomRecurrencePicker/CalendarSection.tsx",
        "complexity": 18,
        "lines": 60,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/CustomRecurrencePicker/SelectedDatesList.tsx",
        "complexity": 20,
        "lines": 111,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/CustomRecurrencePicker.tsx",
        "complexity": 22,
        "lines": 94,
        "functions": 11,
        "hooks": 2,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/DateRangePicker.tsx",
        "complexity": 27,
        "lines": 261,
        "functions": 19,
        "hooks": 4,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/DesignSystemStatusIndicator.tsx",
        "complexity": 18,
        "lines": 80,
        "functions": 10,
        "hooks": 4,
        "recommendations": []
      },
      {
        "file": "src/components/DockNavigation.tsx",
        "complexity": 27,
        "lines": 263,
        "functions": 13,
        "hooks": 18,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EditEventForm.tsx",
        "complexity": 33,
        "lines": 328,
        "functions": 10,
        "hooks": 17,
        "recommendations": [
          "Split into smaller components (file has 328 lines)",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventBannerUpload.tsx",
        "complexity": 16,
        "lines": 164,
        "functions": 9,
        "hooks": 8,
        "recommendations": []
      },
      {
        "file": "src/components/EventBasicInfo.tsx",
        "complexity": 28,
        "lines": 200,
        "functions": 7,
        "hooks": 8,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventCostsSection.tsx",
        "complexity": 32,
        "lines": 170,
        "functions": 7,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventDetailsPopup.tsx",
        "complexity": 30,
        "lines": 372,
        "functions": 2,
        "hooks": 13,
        "recommendations": [
          "Split into smaller components (file has 372 lines)",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventErrorBoundary.tsx",
        "complexity": 21,
        "lines": 149,
        "functions": 4,
        "hooks": 0,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventImageCrop.tsx",
        "complexity": 30,
        "lines": 323,
        "functions": 31,
        "hooks": 26,
        "recommendations": [
          "Split into smaller components (file has 323 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventRequirementsSection/RequirementsManager.tsx",
        "complexity": 18,
        "lines": 70,
        "functions": 7,
        "hooks": 2,
        "recommendations": []
      },
      {
        "file": "src/components/EventScheduling.tsx",
        "complexity": 28,
        "lines": 267,
        "functions": 11,
        "hooks": 12,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventSpotManager.tsx",
        "complexity": 26,
        "lines": 186,
        "functions": 7,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventSpotManagerDraggable.tsx",
        "complexity": 46,
        "lines": 283,
        "functions": 16,
        "hooks": 3,
        "recommendations": [
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventSpotManagerFixed.tsx",
        "complexity": 45,
        "lines": 260,
        "functions": 10,
        "hooks": 2,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTemplateCategoryFilter.tsx",
        "complexity": 24,
        "lines": 122,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTemplateErrorBoundary.tsx",
        "complexity": 22,
        "lines": 75,
        "functions": 1,
        "hooks": 0,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTemplateLoader.tsx",
        "complexity": 28,
        "lines": 222,
        "functions": 16,
        "hooks": 13,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTemplateManager.tsx",
        "complexity": 27,
        "lines": 231,
        "functions": 19,
        "hooks": 21,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTemplatePreview.tsx",
        "complexity": 32,
        "lines": 174,
        "functions": 2,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTemplateSaver.tsx",
        "complexity": 26,
        "lines": 149,
        "functions": 3,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/EventTicketSection.tsx",
        "complexity": 32,
        "lines": 277,
        "functions": 14,
        "hooks": 2,
        "recommendations": [
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/FeatureSlideshow.tsx",
        "complexity": 23,
        "lines": 281,
        "functions": 15,
        "hooks": 9,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/FeaturedEventCard.tsx",
        "complexity": 18,
        "lines": 130,
        "functions": 5,
        "hooks": 16,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/FeaturedEventsCarousel.tsx",
        "complexity": 25,
        "lines": 113,
        "functions": 5,
        "hooks": 12,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/FileUpload.tsx",
        "complexity": 37,
        "lines": 196,
        "functions": 13,
        "hooks": 8,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/Footer.tsx",
        "complexity": 19,
        "lines": 256,
        "functions": 13,
        "hooks": 7,
        "recommendations": [
          "Extract utility functions to separate files"
        ]
      },
      {
        "file": "src/components/GoogleMapsComponent.tsx",
        "complexity": 38,
        "lines": 216,
        "functions": 10,
        "hooks": 15,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/GoogleMapsDemo.tsx",
        "complexity": 17,
        "lines": 187,
        "functions": 7,
        "hooks": 3,
        "recommendations": []
      },
      {
        "file": "src/components/GroupManagement.tsx",
        "complexity": 33,
        "lines": 301,
        "functions": 5,
        "hooks": 3,
        "recommendations": [
          "Split into smaller components (file has 301 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/HeroVideoShowreel.tsx",
        "complexity": 40,
        "lines": 227,
        "functions": 27,
        "hooks": 20,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ImageCrop.tsx",
        "complexity": 17,
        "lines": 251,
        "functions": 23,
        "hooks": 25,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/InvoiceDetails.tsx",
        "complexity": 24,
        "lines": 236,
        "functions": 4,
        "hooks": 3,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/InvoiceForm.tsx",
        "complexity": 51,
        "lines": 752,
        "functions": 18,
        "hooks": 14,
        "recommendations": [
          "Split into smaller components (file has 752 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/InvoiceList.deprecated.tsx",
        "complexity": 17,
        "lines": 115,
        "functions": 3,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/InvoiceManagement.tsx",
        "complexity": 34,
        "lines": 268,
        "functions": 20,
        "hooks": 19,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/LandingFlow.tsx",
        "complexity": 18,
        "lines": 60,
        "functions": 3,
        "hooks": 12,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/MapView.tsx",
        "complexity": 19,
        "lines": 123,
        "functions": 7,
        "hooks": 7,
        "recommendations": []
      },
      {
        "file": "src/components/ModernEventCard.tsx",
        "complexity": 33,
        "lines": 224,
        "functions": 15,
        "hooks": 12,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/MonthFilter.tsx",
        "complexity": 25,
        "lines": 103,
        "functions": 7,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/Navigation.tsx",
        "complexity": 16,
        "lines": 193,
        "functions": 8,
        "hooks": 13,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/NotificationCenter.tsx",
        "complexity": 53,
        "lines": 468,
        "functions": 15,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 468 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/NotificationSystem.tsx",
        "complexity": 36,
        "lines": 207,
        "functions": 9,
        "hooks": 5,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/OrganizationManagement.tsx",
        "complexity": 21,
        "lines": 495,
        "functions": 9,
        "hooks": 7,
        "recommendations": [
          "Split into smaller components (file has 495 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/PaymentGatewaySettings.tsx",
        "complexity": 60,
        "lines": 425,
        "functions": 18,
        "hooks": 7,
        "recommendations": [
          "Split into smaller components (file has 425 lines)",
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/PerformerRequirements.tsx",
        "complexity": 17,
        "lines": 268,
        "functions": 5,
        "hooks": 4,
        "recommendations": []
      },
      {
        "file": "src/components/PhotographerCard.tsx",
        "complexity": 19,
        "lines": 203,
        "functions": 9,
        "hooks": 8,
        "recommendations": []
      },
      {
        "file": "src/components/ProfileCalendarView.tsx",
        "complexity": 68,
        "lines": 448,
        "functions": 12,
        "hooks": 14,
        "recommendations": [
          "Split into smaller components (file has 448 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ProfileCompletionIndicator.tsx",
        "complexity": 23,
        "lines": 120,
        "functions": 8,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ProfileHeader.tsx",
        "complexity": 16,
        "lines": 144,
        "functions": 4,
        "hooks": 7,
        "recommendations": []
      },
      {
        "file": "src/components/ProfileInformation.tsx",
        "complexity": 21,
        "lines": 322,
        "functions": 8,
        "hooks": 7,
        "recommendations": [
          "Split into smaller components (file has 322 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/PromoterMarketplace.tsx",
        "complexity": 24,
        "lines": 216,
        "functions": 5,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ProtectedRoute.tsx",
        "complexity": 16,
        "lines": 49,
        "functions": 1,
        "hooks": 4,
        "recommendations": []
      },
      {
        "file": "src/components/RecurringApplicationDateSelector.tsx",
        "complexity": 28,
        "lines": 157,
        "functions": 8,
        "hooks": 4,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/RecurringEventDateSelector.tsx",
        "complexity": 24,
        "lines": 193,
        "functions": 9,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ShowCard.tsx",
        "complexity": 32,
        "lines": 159,
        "functions": 6,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ShowCardActions.tsx",
        "complexity": 17,
        "lines": 100,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/ShowCardBadges.tsx",
        "complexity": 17,
        "lines": 54,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/ShowCardHeader.tsx",
        "complexity": 16,
        "lines": 84,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/SocialMediaInput.tsx",
        "complexity": 19,
        "lines": 145,
        "functions": 5,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/SocialProofTestimonials.tsx",
        "complexity": 28,
        "lines": 340,
        "functions": 11,
        "hooks": 6,
        "recommendations": [
          "Split into smaller components (file has 340 lines)",
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/TicketPage.tsx",
        "complexity": 28,
        "lines": 312,
        "functions": 9,
        "hooks": 5,
        "recommendations": [
          "Split into smaller components (file has 312 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/TicketingInfo.tsx",
        "complexity": 23,
        "lines": 235,
        "functions": 5,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/VouchButton.tsx",
        "complexity": 33,
        "lines": 152,
        "functions": 2,
        "hooks": 8,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/VouchCard.tsx",
        "complexity": 19,
        "lines": 78,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/VouchSystem.tsx",
        "complexity": 19,
        "lines": 216,
        "functions": 7,
        "hooks": 5,
        "recommendations": []
      },
      {
        "file": "src/components/VouchSystemEnhanced.tsx",
        "complexity": 41,
        "lines": 582,
        "functions": 19,
        "hooks": 25,
        "recommendations": [
          "Split into smaller components (file has 582 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/WaitlistForm.tsx",
        "complexity": 20,
        "lines": 174,
        "functions": 4,
        "hooks": 5,
        "recommendations": []
      },
      {
        "file": "src/components/XeroSyncButton.tsx",
        "complexity": 17,
        "lines": 166,
        "functions": 4,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/admin/AnalyticsDashboard.tsx",
        "complexity": 19,
        "lines": 202,
        "functions": 6,
        "hooks": 3,
        "recommendations": []
      },
      {
        "file": "src/components/admin/ApplicationCard.tsx",
        "complexity": 44,
        "lines": 310,
        "functions": 11,
        "hooks": 0,
        "recommendations": [
          "Split into smaller components (file has 310 lines)",
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/ApplicationFilters.tsx",
        "complexity": 19,
        "lines": 195,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/admin/ApplicationStats.tsx",
        "complexity": 30,
        "lines": 120,
        "functions": 2,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/BrevoSyncMonitor.tsx",
        "complexity": 44,
        "lines": 335,
        "functions": 15,
        "hooks": 10,
        "recommendations": [
          "Split into smaller components (file has 335 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/BulkApplicationActions.tsx",
        "complexity": 28,
        "lines": 127,
        "functions": 3,
        "hooks": 2,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/ComedianBookingsCard.tsx",
        "complexity": 20,
        "lines": 118,
        "functions": 4,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/admin/DeadlineMonitoringDashboard.tsx",
        "complexity": 46,
        "lines": 447,
        "functions": 17,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 447 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/EventApplicationsPanel.tsx",
        "complexity": 45,
        "lines": 309,
        "functions": 16,
        "hooks": 16,
        "recommendations": [
          "Split into smaller components (file has 309 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/EventManagementContent.tsx",
        "complexity": 31,
        "lines": 421,
        "functions": 11,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 421 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/EventMatchingDashboard.tsx",
        "complexity": 40,
        "lines": 312,
        "functions": 17,
        "hooks": 11,
        "recommendations": [
          "Split into smaller components (file has 312 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/MetaPixelSettings.tsx",
        "complexity": 21,
        "lines": 273,
        "functions": 8,
        "hooks": 8,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/PlatformAnalyticsDashboard.tsx",
        "complexity": 51,
        "lines": 499,
        "functions": 12,
        "hooks": 12,
        "recommendations": [
          "Split into smaller components (file has 499 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/ReconciliationDashboard.tsx",
        "complexity": 33,
        "lines": 436,
        "functions": 7,
        "hooks": 8,
        "recommendations": [
          "Split into smaller components (file has 436 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/SitemapMonitor.tsx",
        "complexity": 25,
        "lines": 251,
        "functions": 7,
        "hooks": 6,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/SystemSettings.tsx",
        "complexity": 19,
        "lines": 453,
        "functions": 11,
        "hooks": 5,
        "recommendations": [
          "Split into smaller components (file has 453 lines)",
          "Extract utility functions to separate files"
        ]
      },
      {
        "file": "src/components/admin/ThemeSettings.tsx",
        "complexity": 28,
        "lines": 346,
        "functions": 12,
        "hooks": 8,
        "recommendations": [
          "Split into smaller components (file has 346 lines)",
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/TicketSalesCard.tsx",
        "complexity": 18,
        "lines": 124,
        "functions": 2,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/admin/UserManagement.tsx",
        "complexity": 58,
        "lines": 559,
        "functions": 15,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 559 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/XeroIntegration.tsx",
        "complexity": 28,
        "lines": 609,
        "functions": 17,
        "hooks": 14,
        "recommendations": [
          "Split into smaller components (file has 609 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/analytics/FacebookAdsChart.tsx",
        "complexity": 21,
        "lines": 192,
        "functions": 9,
        "hooks": 3,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/analytics/TicketsByProviderChart.tsx",
        "complexity": 24,
        "lines": 167,
        "functions": 5,
        "hooks": 1,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/analytics/TicketsBySuburbChart.tsx",
        "complexity": 29,
        "lines": 184,
        "functions": 7,
        "hooks": 1,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/design-system/ColorSystemControls.tsx",
        "complexity": 21,
        "lines": 147,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/design-system/EffectsControls.tsx",
        "complexity": 23,
        "lines": 195,
        "functions": 7,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/design-system/PresetManagement.tsx",
        "complexity": 22,
        "lines": 214,
        "functions": 10,
        "hooks": 5,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/design-system/TypographyControls.tsx",
        "complexity": 16,
        "lines": 263,
        "functions": 5,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/admin/event-detail/EditBookingDialog.tsx",
        "complexity": 16,
        "lines": 136,
        "functions": 4,
        "hooks": 5,
        "recommendations": []
      },
      {
        "file": "src/components/admin/event-detail/EventDetailsTab.tsx",
        "complexity": 23,
        "lines": 402,
        "functions": 4,
        "hooks": 5,
        "recommendations": [
          "Split into smaller components (file has 402 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/event-detail/EventLineupTab.tsx",
        "complexity": 21,
        "lines": 146,
        "functions": 5,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/event-detail/EventSettlementsTab.tsx",
        "complexity": 55,
        "lines": 405,
        "functions": 9,
        "hooks": 8,
        "recommendations": [
          "Split into smaller components (file has 405 lines)",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/event-detail/EventTicketSalesTab.tsx",
        "complexity": 65,
        "lines": 491,
        "functions": 10,
        "hooks": 13,
        "recommendations": [
          "Split into smaller components (file has 491 lines)",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/event-detail/LineupTable.tsx",
        "complexity": 20,
        "lines": 171,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/admin/financial/CostManagement.tsx",
        "complexity": 36,
        "lines": 242,
        "functions": 2,
        "hooks": 6,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/financial/EventProfitability.tsx",
        "complexity": 25,
        "lines": 130,
        "functions": 4,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/financial/MarketingCostForm.tsx",
        "complexity": 18,
        "lines": 195,
        "functions": 3,
        "hooks": 8,
        "recommendations": []
      },
      {
        "file": "src/components/admin/financial/VenueCostForm.tsx",
        "complexity": 16,
        "lines": 147,
        "functions": 3,
        "hooks": 8,
        "recommendations": []
      },
      {
        "file": "src/components/admin/financial/XeroIntegration.tsx",
        "complexity": 29,
        "lines": 205,
        "functions": 6,
        "hooks": 7,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/financial/XeroIntegrationEnhanced.tsx",
        "complexity": 30,
        "lines": 248,
        "functions": 6,
        "hooks": 8,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/admin/ticket-sales/SalesTable.tsx",
        "complexity": 20,
        "lines": 130,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/admin/ticket-sales/TicketSalesManagement.tsx",
        "complexity": 18,
        "lines": 115,
        "functions": 4,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/agency/AgencyManagerDashboard.tsx",
        "complexity": 26,
        "lines": 414,
        "functions": 5,
        "hooks": 9,
        "recommendations": [
          "Split into smaller components (file has 414 lines)",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/agency/CreateAgencyModal.tsx",
        "complexity": 21,
        "lines": 333,
        "functions": 9,
        "hooks": 6,
        "recommendations": [
          "Split into smaller components (file has 333 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/agency/DealNegotiationEngine.tsx",
        "complexity": 35,
        "lines": 478,
        "functions": 10,
        "hooks": 21,
        "recommendations": [
          "Split into smaller components (file has 478 lines)",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/analytics/AnalyticsChart.tsx",
        "complexity": 18,
        "lines": 81,
        "functions": 5,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/analytics/AnalyticsDashboard.tsx",
        "complexity": 18,
        "lines": 183,
        "functions": 3,
        "hooks": 5,
        "recommendations": []
      },
      {
        "file": "src/components/analytics/DeviceBreakdown.tsx",
        "complexity": 43,
        "lines": 157,
        "functions": 10,
        "hooks": 0,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/analytics/EngagementMetrics.tsx",
        "complexity": 29,
        "lines": 113,
        "functions": 1,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/analytics/TrafficSources.tsx",
        "complexity": 28,
        "lines": 121,
        "functions": 8,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/auth/SignUpForm.tsx",
        "complexity": 20,
        "lines": 218,
        "functions": 4,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/cards/DataCard.tsx",
        "complexity": 45,
        "lines": 214,
        "functions": 3,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian/ApplicationsListSection.tsx",
        "complexity": 29,
        "lines": 162,
        "functions": 7,
        "hooks": 7,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian/BookingRequestsSection.tsx",
        "complexity": 58,
        "lines": 473,
        "functions": 12,
        "hooks": 13,
        "recommendations": [
          "Split into smaller components (file has 473 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian/PendingConfirmationsSection.tsx",
        "complexity": 29,
        "lines": 239,
        "functions": 8,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian/SpotConfirmationCard.tsx",
        "complexity": 26,
        "lines": 239,
        "functions": 5,
        "hooks": 6,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianAvailabilityCalendar.tsx",
        "complexity": 34,
        "lines": 317,
        "functions": 16,
        "hooks": 9,
        "recommendations": [
          "Split into smaller components (file has 317 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianCalendarSync.tsx",
        "complexity": 34,
        "lines": 242,
        "functions": 7,
        "hooks": 8,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianContact.tsx",
        "complexity": 31,
        "lines": 179,
        "functions": 4,
        "hooks": 0,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianMedia.tsx",
        "complexity": 40,
        "lines": 368,
        "functions": 11,
        "hooks": 16,
        "recommendations": [
          "Split into smaller components (file has 368 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianProfileLayout.tsx",
        "complexity": 18,
        "lines": 166,
        "functions": 6,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianReviews.tsx",
        "complexity": 26,
        "lines": 155,
        "functions": 4,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianSocialLinks.tsx",
        "complexity": 17,
        "lines": 33,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/comedian-profile/ComedianStats.tsx",
        "complexity": 26,
        "lines": 188,
        "functions": 2,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/ComedianUpcomingShows.tsx",
        "complexity": 46,
        "lines": 268,
        "functions": 15,
        "hooks": 13,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/PublicAvailabilityCalendar.tsx",
        "complexity": 38,
        "lines": 288,
        "functions": 18,
        "hooks": 10,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/comedian-profile/accomplishments/PressReviews.tsx",
        "complexity": 20,
        "lines": 67,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/dashboard/EarningsCard.tsx",
        "complexity": 20,
        "lines": 186,
        "functions": 7,
        "hooks": 8,
        "recommendations": []
      },
      {
        "file": "src/components/dashboard/SpotConfirmationNotifications.tsx",
        "complexity": 27,
        "lines": 204,
        "functions": 3,
        "hooks": 7,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/data/DataTable.tsx",
        "complexity": 39,
        "lines": 191,
        "functions": 4,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/ApplicationDialog.example.tsx",
        "complexity": 18,
        "lines": 209,
        "functions": 3,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/events/AutoSaveExample.tsx",
        "complexity": 21,
        "lines": 146,
        "functions": 8,
        "hooks": 12,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/AutoSaveStatus.stories.tsx",
        "complexity": 16,
        "lines": 271,
        "functions": 8,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/events/AutoSaveStatus.tsx",
        "complexity": 45,
        "lines": 242,
        "functions": 16,
        "hooks": 10,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/EventApplicationForm.tsx",
        "complexity": 21,
        "lines": 241,
        "functions": 2,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/EventFilters.tsx",
        "complexity": 21,
        "lines": 286,
        "functions": 11,
        "hooks": 3,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/EventPreview.tsx",
        "complexity": 35,
        "lines": 340,
        "functions": 8,
        "hooks": 2,
        "recommendations": [
          "Split into smaller components (file has 340 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/MultiPlatformTicketTracker.tsx",
        "complexity": 18,
        "lines": 202,
        "functions": 6,
        "hooks": 2,
        "recommendations": []
      },
      {
        "file": "src/components/events/OptimizedEventBanner.tsx",
        "complexity": 19,
        "lines": 75,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/events/SpotAssignmentManager.tsx",
        "complexity": 84,
        "lines": 672,
        "functions": 36,
        "hooks": 21,
        "recommendations": [
          "Split into smaller components (file has 672 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/SpotConfirmationStatus.tsx",
        "complexity": 48,
        "lines": 288,
        "functions": 11,
        "hooks": 4,
        "recommendations": [
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/UnsavedChangesWarning.tsx",
        "complexity": 25,
        "lines": 213,
        "functions": 19,
        "hooks": 16,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/events/ValidationFeedback.tsx",
        "complexity": 45,
        "lines": 186,
        "functions": 3,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/forms/FormField.tsx",
        "complexity": 36,
        "lines": 190,
        "functions": 3,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/BulkActionsBar.tsx",
        "complexity": 17,
        "lines": 244,
        "functions": 1,
        "hooks": 3,
        "recommendations": []
      },
      {
        "file": "src/components/invoice/InvoiceCard.tsx",
        "complexity": 26,
        "lines": 311,
        "functions": 13,
        "hooks": 7,
        "recommendations": [
          "Split into smaller components (file has 311 lines)",
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/InvoiceEdit.tsx",
        "complexity": 59,
        "lines": 524,
        "functions": 14,
        "hooks": 11,
        "recommendations": [
          "Split into smaller components (file has 524 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/InvoiceManagementCard.tsx",
        "complexity": 41,
        "lines": 226,
        "functions": 12,
        "hooks": 5,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/InvoicePDFTemplate.tsx",
        "complexity": 19,
        "lines": 429,
        "functions": 7,
        "hooks": 0,
        "recommendations": [
          "Split into smaller components (file has 429 lines)"
        ]
      },
      {
        "file": "src/components/invoice/InvoicePreview.tsx",
        "complexity": 43,
        "lines": 464,
        "functions": 11,
        "hooks": 2,
        "recommendations": [
          "Split into smaller components (file has 464 lines)",
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/PaymentHistory.tsx",
        "complexity": 26,
        "lines": 225,
        "functions": 9,
        "hooks": 6,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/TemplateCustomizer.tsx",
        "complexity": 19,
        "lines": 580,
        "functions": 11,
        "hooks": 8,
        "recommendations": [
          "Split into smaller components (file has 580 lines)",
          "Extract utility functions to separate files"
        ]
      },
      {
        "file": "src/components/invoice/TemplateGallery.tsx",
        "complexity": 38,
        "lines": 371,
        "functions": 13,
        "hooks": 4,
        "recommendations": [
          "Split into smaller components (file has 371 lines)",
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/TemplateManager.tsx",
        "complexity": 44,
        "lines": 365,
        "functions": 15,
        "hooks": 12,
        "recommendations": [
          "Split into smaller components (file has 365 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/invoice/templates/BaseInvoiceTemplate.tsx",
        "complexity": 18,
        "lines": 301,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "Split into smaller components (file has 301 lines)"
        ]
      },
      {
        "file": "src/components/invoice/templates/ClassicProfessionalTemplate.tsx",
        "complexity": 19,
        "lines": 315,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "Split into smaller components (file has 315 lines)"
        ]
      },
      {
        "file": "src/components/invoice/templates/MinimalCleanTemplate.tsx",
        "complexity": 19,
        "lines": 265,
        "functions": 5,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/invoice/templates/ModernGradientTemplate.tsx",
        "complexity": 20,
        "lines": 333,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "Split into smaller components (file has 333 lines)"
        ]
      },
      {
        "file": "src/components/invoice/templates/StandUpSydneyTemplate.tsx",
        "complexity": 22,
        "lines": 363,
        "functions": 5,
        "hooks": 0,
        "recommendations": [
          "Split into smaller components (file has 363 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/notifications/NotificationCenter.tsx",
        "complexity": 47,
        "lines": 780,
        "functions": 21,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 780 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/photographer-profile/PhotographerAvailability.tsx",
        "complexity": 29,
        "lines": 177,
        "functions": 7,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/photographer-profile/PhotographerBooking.tsx",
        "complexity": 18,
        "lines": 256,
        "functions": 5,
        "hooks": 7,
        "recommendations": []
      },
      {
        "file": "src/components/photographer-profile/PhotographerHeader.tsx",
        "complexity": 22,
        "lines": 212,
        "functions": 3,
        "hooks": 4,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/photographer-profile/PhotographerInfo.tsx",
        "complexity": 20,
        "lines": 158,
        "functions": 3,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/photographer-profile/PhotographerPortfolio.tsx",
        "complexity": 28,
        "lines": 275,
        "functions": 7,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/photographer-profile/PhotographerVouches.tsx",
        "complexity": 34,
        "lines": 214,
        "functions": 4,
        "hooks": 3,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/profile/InterestedEventsSection.tsx",
        "complexity": 20,
        "lines": 90,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/profile/MediaUpload.tsx",
        "complexity": 40,
        "lines": 387,
        "functions": 14,
        "hooks": 14,
        "recommendations": [
          "Split into smaller components (file has 387 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/profile/ProfileTabs.tsx",
        "complexity": 23,
        "lines": 152,
        "functions": 3,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/profile/ProfileUrlEditor.tsx",
        "complexity": 18,
        "lines": 158,
        "functions": 8,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/components/profile/TicketsSection.tsx",
        "complexity": 22,
        "lines": 166,
        "functions": 2,
        "hooks": 5,
        "recommendations": [
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/promoter/BookingManagementDashboard.tsx",
        "complexity": 60,
        "lines": 464,
        "functions": 9,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 464 lines)",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/promoter-profile/PromoterAvatar.tsx",
        "complexity": 25,
        "lines": 124,
        "functions": 4,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/promoter-profile/PromoterHeader.tsx",
        "complexity": 18,
        "lines": 271,
        "functions": 1,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/promoter-profile/PromoterProfileLayout.tsx",
        "complexity": 18,
        "lines": 143,
        "functions": 8,
        "hooks": 4,
        "recommendations": []
      },
      {
        "file": "src/components/pwa/OfflineIndicator.tsx",
        "complexity": 22,
        "lines": 179,
        "functions": 11,
        "hooks": 6,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/pwa/PWAInstaller.tsx",
        "complexity": 30,
        "lines": 222,
        "functions": 7,
        "hooks": 7,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/spots/DeadlineCountdown.tsx",
        "complexity": 26,
        "lines": 82,
        "functions": 10,
        "hooks": 6,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/spots/DeadlineTimer.tsx",
        "complexity": 35,
        "lines": 151,
        "functions": 10,
        "hooks": 6,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/spots/SpotConfirmationCard.tsx",
        "complexity": 29,
        "lines": 395,
        "functions": 15,
        "hooks": 10,
        "recommendations": [
          "Split into smaller components (file has 395 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/tasks/ApplyTemplateDialog.tsx",
        "complexity": 68,
        "lines": 551,
        "functions": 13,
        "hooks": 20,
        "recommendations": [
          "Split into smaller components (file has 551 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/tasks/TaskTemplateBuilder.tsx",
        "complexity": 59,
        "lines": 725,
        "functions": 13,
        "hooks": 24,
        "recommendations": [
          "Split into smaller components (file has 725 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ticket-sales/widgets/PlatformBreakdownWidget.tsx",
        "complexity": 25,
        "lines": 164,
        "functions": 7,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ticket-sales/widgets/RecentSalesActivity.tsx",
        "complexity": 17,
        "lines": 139,
        "functions": 5,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/ticket-sales/widgets/SalesMetricsWidget.tsx",
        "complexity": 19,
        "lines": 119,
        "functions": 6,
        "hooks": 0,
        "recommendations": []
      },
      {
        "file": "src/components/ticket-sales/widgets/SalesVelocityChart.tsx",
        "complexity": 28,
        "lines": 207,
        "functions": 14,
        "hooks": 0,
        "recommendations": [
          "Extract utility functions to separate files",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ticket-sales/widgets/SyncStatusMonitor.tsx",
        "complexity": 45,
        "lines": 301,
        "functions": 12,
        "hooks": 9,
        "recommendations": [
          "Split into smaller components (file has 301 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/tours/TourCollaborationManager.tsx",
        "complexity": 36,
        "lines": 775,
        "functions": 23,
        "hooks": 16,
        "recommendations": [
          "Split into smaller components (file has 775 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/tours/TourPlanningWorkspace.tsx",
        "complexity": 41,
        "lines": 875,
        "functions": 29,
        "hooks": 22,
        "recommendations": [
          "Split into smaller components (file has 875 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/MediaGallery.tsx",
        "complexity": 30,
        "lines": 204,
        "functions": 9,
        "hooks": 3,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/OptimizedAvatar.tsx",
        "complexity": 21,
        "lines": 73,
        "functions": 1,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/OptimizedImage.tsx",
        "complexity": 38,
        "lines": 229,
        "functions": 9,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/button.tsx",
        "complexity": 19,
        "lines": 104,
        "functions": 3,
        "hooks": 3,
        "recommendations": []
      },
      {
        "file": "src/components/ui/carousel.tsx",
        "complexity": 25,
        "lines": 261,
        "functions": 13,
        "hooks": 20,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/chart.tsx",
        "complexity": 60,
        "lines": 364,
        "functions": 11,
        "hooks": 7,
        "recommendations": [
          "Split into smaller components (file has 364 lines)",
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/dock.tsx",
        "complexity": 32,
        "lines": 140,
        "functions": 7,
        "hooks": 22,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/dropdown-menu.tsx",
        "complexity": 16,
        "lines": 247,
        "functions": 14,
        "hooks": 5,
        "recommendations": [
          "Extract utility functions to separate files"
        ]
      },
      {
        "file": "src/components/ui/field-with-validation.tsx",
        "complexity": 22,
        "lines": 120,
        "functions": 3,
        "hooks": 0,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/magic-card.tsx",
        "complexity": 21,
        "lines": 110,
        "functions": 7,
        "hooks": 55,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/marquee.tsx",
        "complexity": 19,
        "lines": 53,
        "functions": 1,
        "hooks": 3,
        "recommendations": []
      },
      {
        "file": "src/components/ui/sidebar.tsx",
        "complexity": 48,
        "lines": 762,
        "functions": 26,
        "hooks": 17,
        "recommendations": [
          "Split into smaller components (file has 762 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/time-picker.tsx",
        "complexity": 23,
        "lines": 83,
        "functions": 5,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/components/ui/toaster.tsx",
        "complexity": 17,
        "lines": 34,
        "functions": 1,
        "hooks": 2,
        "recommendations": []
      },
      {
        "file": "src/contexts/AuthContext.tsx",
        "complexity": 51,
        "lines": 307,
        "functions": 19,
        "hooks": 20,
        "recommendations": [
          "Split into smaller components (file has 307 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/contexts/ThemeContext.tsx",
        "complexity": 28,
        "lines": 181,
        "functions": 18,
        "hooks": 12,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/contexts/UserContext.tsx",
        "complexity": 20,
        "lines": 69,
        "functions": 9,
        "hooks": 7,
        "recommendations": []
      },
      {
        "file": "src/pages/AddGig.tsx",
        "complexity": 17,
        "lines": 219,
        "functions": 9,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/pages/AgencyManagement.tsx",
        "complexity": 28,
        "lines": 293,
        "functions": 8,
        "hooks": 12,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Applications.tsx",
        "complexity": 74,
        "lines": 355,
        "functions": 26,
        "hooks": 30,
        "recommendations": [
          "Split into smaller components (file has 355 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Auth.tsx",
        "complexity": 22,
        "lines": 150,
        "functions": 6,
        "hooks": 13,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/AuthCallback.tsx",
        "complexity": 38,
        "lines": 273,
        "functions": 14,
        "hooks": 9,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/BookComedian.tsx",
        "complexity": 18,
        "lines": 88,
        "functions": 3,
        "hooks": 11,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/pages/ComedianProfile.tsx",
        "complexity": 23,
        "lines": 93,
        "functions": 3,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/ComedianProfileBySlug.tsx",
        "complexity": 29,
        "lines": 177,
        "functions": 4,
        "hooks": 5,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/CustomizationSettings.tsx",
        "complexity": 25,
        "lines": 175,
        "functions": 8,
        "hooks": 8,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Dashboard.tsx",
        "complexity": 58,
        "lines": 398,
        "functions": 11,
        "hooks": 15,
        "recommendations": [
          "Split into smaller components (file has 398 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/EditEvent.tsx",
        "complexity": 22,
        "lines": 131,
        "functions": 6,
        "hooks": 12,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/EventApplicationPage.tsx",
        "complexity": 20,
        "lines": 279,
        "functions": 4,
        "hooks": 19,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/pages/EventDetail.tsx",
        "complexity": 25,
        "lines": 299,
        "functions": 8,
        "hooks": 16,
        "recommendations": [
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/EventDetailPublic.tsx",
        "complexity": 51,
        "lines": 601,
        "functions": 13,
        "hooks": 24,
        "recommendations": [
          "Split into smaller components (file has 601 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/EventDetails.tsx",
        "complexity": 33,
        "lines": 430,
        "functions": 4,
        "hooks": 17,
        "recommendations": [
          "Split into smaller components (file has 430 lines)",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/EventSeries.tsx",
        "complexity": 22,
        "lines": 344,
        "functions": 5,
        "hooks": 8,
        "recommendations": [
          "Split into smaller components (file has 344 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/FlightDashboard.tsx",
        "complexity": 44,
        "lines": 528,
        "functions": 11,
        "hooks": 19,
        "recommendations": [
          "Split into smaller components (file has 528 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/GoogleCalendarCallback.tsx",
        "complexity": 29,
        "lines": 182,
        "functions": 11,
        "hooks": 14,
        "recommendations": [
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Index.tsx",
        "complexity": 16,
        "lines": 221,
        "functions": 4,
        "hooks": 2,
        "recommendations": []
      },
      {
        "file": "src/pages/InvoicePaymentCancelled.tsx",
        "complexity": 20,
        "lines": 120,
        "functions": 4,
        "hooks": 9,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/pages/Marketplace.tsx",
        "complexity": 20,
        "lines": 130,
        "functions": 3,
        "hooks": 2,
        "recommendations": []
      },
      {
        "file": "src/pages/Messages.tsx",
        "complexity": 58,
        "lines": 589,
        "functions": 20,
        "hooks": 11,
        "recommendations": [
          "Split into smaller components (file has 589 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Notifications.tsx",
        "complexity": 54,
        "lines": 380,
        "functions": 20,
        "hooks": 7,
        "recommendations": [
          "Split into smaller components (file has 380 lines)",
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Organizer.tsx",
        "complexity": 28,
        "lines": 377,
        "functions": 13,
        "hooks": 19,
        "recommendations": [
          "Split into smaller components (file has 377 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/PWASettings.tsx",
        "complexity": 23,
        "lines": 341,
        "functions": 3,
        "hooks": 3,
        "recommendations": [
          "Split into smaller components (file has 341 lines)",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Photographers.tsx",
        "complexity": 32,
        "lines": 335,
        "functions": 17,
        "hooks": 13,
        "recommendations": [
          "Split into smaller components (file has 335 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Pricing.tsx",
        "complexity": 25,
        "lines": 198,
        "functions": 3,
        "hooks": 2,
        "recommendations": [
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/Profile.tsx",
        "complexity": 33,
        "lines": 303,
        "functions": 19,
        "hooks": 19,
        "recommendations": [
          "Split into smaller components (file has 303 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/PromoterSettings.tsx",
        "complexity": 20,
        "lines": 171,
        "functions": 14,
        "hooks": 5,
        "recommendations": [
          "Extract utility functions to separate files"
        ]
      },
      {
        "file": "src/pages/Shows.tsx",
        "complexity": 65,
        "lines": 498,
        "functions": 20,
        "hooks": 37,
        "recommendations": [
          "Split into smaller components (file has 498 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/SpotConfirmationPage.tsx",
        "complexity": 40,
        "lines": 351,
        "functions": 12,
        "hooks": 13,
        "recommendations": [
          "Split into smaller components (file has 351 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/TaskDashboard.tsx",
        "complexity": 28,
        "lines": 383,
        "functions": 5,
        "hooks": 17,
        "recommendations": [
          "Split into smaller components (file has 383 lines)",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/TestEventValidation.tsx",
        "complexity": 45,
        "lines": 315,
        "functions": 7,
        "hooks": 6,
        "recommendations": [
          "Split into smaller components (file has 315 lines)",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/TourDashboard.tsx",
        "complexity": 30,
        "lines": 670,
        "functions": 30,
        "hooks": 24,
        "recommendations": [
          "Split into smaller components (file has 670 lines)",
          "Extract utility functions to separate files",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "src/pages/XeroCallback.tsx",
        "complexity": 18,
        "lines": 119,
        "functions": 4,
        "hooks": 10,
        "recommendations": [
          "Consider custom hooks to consolidate logic"
        ]
      },
      {
        "file": "src/pages/admin/TicketSalesTestPage.tsx",
        "complexity": 22,
        "lines": 340,
        "functions": 4,
        "hooks": 9,
        "recommendations": [
          "Split into smaller components (file has 340 lines)",
          "Consider custom hooks to consolidate logic",
          "High cognitive complexity - consider refactoring"
        ]
      },
      {
        "file": "tests/ticket-sales-dashboard.test.tsx",
        "complexity": 24,
        "lines": 188,
        "functions": 20,
        "hooks": 0,
        "recommendations": [
          "Extract utility functions to separate files",
          "Reduce nesting complexity with early returns",
          "High cognitive complexity - consider refactoring"
        ]
      }
    ],
    "unusedImports": [
      {
        "file": "apply-event-migration.js",
        "unusedImports": [
          {
            "name": "readFileSync",
            "type": "named",
            "source": "fs"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "real-file-analysis-engine.js",
        "unusedImports": [
          {
            "name": "c",
            "type": "named",
            "source": "..."
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "scripts/apply-customer-fields-migration.js",
        "unusedImports": [
          {
            "name": "promises",
            "type": "named",
            "source": "fs"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "scripts/apply-customers-migration.js",
        "unusedImports": [
          {
            "name": "promises",
            "type": "named",
            "source": "fs"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "scripts/complete-enhanced-deployment.js",
        "unusedImports": [
          {
            "name": "promises",
            "type": "named",
            "source": "fs"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "scripts/humanitix-event-analysis.js",
        "unusedImports": [
          {
            "name": "promisify",
            "type": "named",
            "source": "util"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "scripts/migrate-customers-to-brevo.js",
        "unusedImports": [
          {
            "name": "promises",
            "type": "named",
            "source": "fs"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "scripts/n8n-automation.js",
        "unusedImports": [
          {
            "name": "execSync",
            "type": "named",
            "source": "child_process"
          },
          {
            "name": "readFileSync",
            "type": "named",
            "source": "fs"
          },
          {
            "name": "writeFileSync",
            "type": "named",
            "source": "fs"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "simple-mcp-client.js",
        "unusedImports": [
          {
            "name": "spawn",
            "type": "named",
            "source": "child_process"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/App.tsx",
        "unusedImports": [
          {
            "name": "BrowserRouter",
            "type": "named",
            "source": "react-router-dom"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ApplicationForm.tsx",
        "unusedImports": [
          {
            "name": "useNavigate",
            "type": "named",
            "source": "react-router-dom"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/BrandingCustomization.tsx",
        "unusedImports": [
          {
            "name": "Badge",
            "type": "named",
            "source": "@/components/ui/badge"
          },
          {
            "name": "Avatar",
            "type": "named",
            "source": "@/components/ui/avatar"
          },
          {
            "name": "AvatarFallback",
            "type": "named",
            "source": "@/components/ui/avatar"
          },
          {
            "name": "AvatarImage",
            "type": "named",
            "source": "@/components/ui/avatar"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/CalendarView.tsx",
        "unusedImports": [
          {
            "name": "Badge",
            "type": "named",
            "source": "@/components/ui/badge"
          },
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Users",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Star",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Heart",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/components/CardCalendar.tsx",
        "unusedImports": [
          {
            "name": "Badge",
            "type": "named",
            "source": "@/components/ui/badge"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/CommissionSplitManager.tsx",
        "unusedImports": [
          {
            "name": "Plus",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ConnectionRequest.tsx",
        "unusedImports": [
          {
            "name": "MessageCircle",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "UserCheck",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "UserX",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Shield",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "AlertTriangle",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/components/ContactSettings.tsx",
        "unusedImports": [
          {
            "name": "EyeOff",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/CustomRecurrencePicker.tsx",
        "unusedImports": [
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/DockNavigation.tsx",
        "unusedImports": [
          {
            "name": "Button",
            "type": "named",
            "source": "@/components/ui/button"
          },
          {
            "name": "Palette",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/EventSpotManagerFixed.tsx",
        "unusedImports": [
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/EventTemplateLoader.tsx",
        "unusedImports": [
          {
            "name": "SelectItem",
            "type": "named",
            "source": "@/components/ui/select"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/EventTemplateManager.tsx",
        "unusedImports": [
          {
            "name": "AlertDialogTrigger",
            "type": "named",
            "source": "@/components/ui/alert-dialog"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/FeaturedEventCard.tsx",
        "unusedImports": [
          {
            "name": "ArrowRight",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/FeaturedEventsCarousel.tsx",
        "unusedImports": [
          {
            "name": "Button",
            "type": "named",
            "source": "@/components/ui/button"
          },
          {
            "name": "ChevronLeft",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "ChevronRight",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "CarouselNext",
            "type": "named",
            "source": "@/components/ui/carousel"
          },
          {
            "name": "CarouselPrevious",
            "type": "named",
            "source": "@/components/ui/carousel"
          },
          {
            "name": "cn",
            "type": "named",
            "source": "@/lib/utils"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/components/GroupManagement.tsx",
        "unusedImports": [
          {
            "name": "Select",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectContent",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectItem",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectTrigger",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectValue",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "Settings",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Shield",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 140
      },
      {
        "file": "src/components/HeroVideoPlaceholder.tsx",
        "unusedImports": [
          {
            "name": "Play",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/InvoiceDetails.tsx",
        "unusedImports": [
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/NotificationCenter.tsx",
        "unusedImports": [
          {
            "name": "Trash2",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "MoreHorizontal",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Volume2",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "VolumeX",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "useUnreadNotifications",
            "type": "named",
            "source": "@/hooks/useNotifications"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/components/PaymentGatewaySettings.tsx",
        "unusedImports": [
          {
            "name": "PaymentGatewayConfig",
            "type": "named",
            "source": "../services/paymentService"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/PendingRequests.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/components/ProfileCalendarView.tsx",
        "unusedImports": [
          {
            "name": "TabsContent",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "addDays",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/components/ShowCard.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/ThemeControls.tsx",
        "unusedImports": [
          {
            "name": "Button",
            "type": "named",
            "source": "@/components/ui/button"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/VouchSystemEnhanced.tsx",
        "unusedImports": [
          {
            "name": "DialogTrigger",
            "type": "named",
            "source": "@/components/ui/dialog"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/AnalyticsDashboard.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          },
          {
            "name": "BarChart",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "Bar",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "Users",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Eye",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "UserPlus",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/components/admin/ApplicationCard.tsx",
        "unusedImports": [
          {
            "name": "EyeOff",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "format",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/admin/ComedianBookingsCard.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/DeadlineMonitoringDashboard.tsx",
        "unusedImports": [
          {
            "name": "AlertCircle",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/DesignSystemContent.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/admin/EventApplicationsPanel.tsx",
        "unusedImports": [
          {
            "name": "Badge",
            "type": "named",
            "source": "@/components/ui/badge"
          },
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Check",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "EyeOff",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "UserCheck",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/components/admin/EventFilters.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/EventManagement.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/EventManagementContent.tsx",
        "unusedImports": [
          {
            "name": "BarChart3",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/FinancialDashboard.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/admin/PlatformAnalyticsDashboard.tsx",
        "unusedImports": [
          {
            "name": "BarChart3",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "endOfMonth",
            "type": "named",
            "source": "date-fns"
          },
          {
            "name": "LineChart",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "Line",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "Cell",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "exportToPDF",
            "type": "named",
            "source": "@/utils/export"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/components/admin/ReconciliationDashboard.tsx",
        "unusedImports": [
          {
            "name": "XCircle",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Download",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "cn",
            "type": "named",
            "source": "@/lib/utils"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/components/admin/SetupComedianMedia.tsx",
        "unusedImports": [
          {
            "name": "XCircle",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/SystemSettings.tsx",
        "unusedImports": [
          {
            "name": "Textarea",
            "type": "named",
            "source": "@/components/ui/textarea"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/ThemeSettings.tsx",
        "unusedImports": [
          {
            "name": "Input",
            "type": "named",
            "source": "@/components/ui/input"
          },
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Smartphone",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Monitor",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/admin/TicketSalesCard.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/XeroIntegration.tsx",
        "unusedImports": [
          {
            "name": "Alert",
            "type": "named",
            "source": "@/components/ui/alert"
          },
          {
            "name": "AlertDescription",
            "type": "named",
            "source": "@/components/ui/alert"
          },
          {
            "name": "Zap",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Upload",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "AlertCircle",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "FileText",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "BarChart3",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "RefreshCw",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "ArrowRight",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 240
      },
      {
        "file": "src/components/admin/analytics/TicketsBySuburbChart.tsx",
        "unusedImports": [
          {
            "name": "Legend",
            "type": "named",
            "source": "recharts"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/event-detail/EventSettlementsTab.tsx",
        "unusedImports": [
          {
            "name": "FileText",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/events-table/EventsEmptyState.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/events-table/EventsTableHeader.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/financial/CostManagement.tsx",
        "unusedImports": [
          {
            "name": "Plus",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/financial/EventProfitability.tsx",
        "unusedImports": [
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/ticket-sales/SalesFilterSection.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/ticket-sales/SalesMetricsCards.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/admin/ticket-sales/SalesTable.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/agency/AgencyManagerDashboard.tsx",
        "unusedImports": [
          {
            "name": "AvatarImage",
            "type": "named",
            "source": "../ui/avatar"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/agency/DealNegotiationEngine.tsx",
        "unusedImports": [
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "BarChart3",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/analytics/AnalyticsDashboard.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/components/analytics/AnalyticsPrivacyNotice.tsx",
        "unusedImports": [
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/analytics/DeviceBreakdown.tsx",
        "unusedImports": [
          {
            "name": "Legend",
            "type": "named",
            "source": "recharts"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/comedian/ApplicationsListSection.tsx",
        "unusedImports": [
          {
            "name": "cn",
            "type": "named",
            "source": "@/lib/utils"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/comedian/BookingRequestsSection.tsx",
        "unusedImports": [
          {
            "name": "Tabs",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "TabsContent",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "TabsList",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "TabsTrigger",
            "type": "named",
            "source": "@/components/ui/tabs"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/comedian/PendingConfirmationsSection.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/comedian-profile/ComedianAvailabilityCalendar.tsx",
        "unusedImports": [
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "isSameDay",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/comedian-profile/ComedianMedia.tsx",
        "unusedImports": [
          {
            "name": "Image",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Download",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Edit",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/components/comedian-profile/PublicAvailabilityCalendar.tsx",
        "unusedImports": [
          {
            "name": "Clock",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "addDays",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/dashboard/EarningsCard.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/events/BasicEventInfoEnhanced.tsx",
        "unusedImports": [
          {
            "name": "useFieldValidation",
            "type": "named",
            "source": "@/hooks/useEventValidation"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/events/EventFilters.tsx",
        "unusedImports": [
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/events/EventPreview.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/events/SpotAssignmentManager.tsx",
        "unusedImports": [
          {
            "name": "Separator",
            "type": "named",
            "source": "@/components/ui/separator"
          },
          {
            "name": "MoreHorizontal",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Trash2",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Edit",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/invoice/InvoiceEdit.tsx",
        "unusedImports": [
          {
            "name": "Select",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectContent",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectItem",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectTrigger",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectValue",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "X",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/components/invoice/InvoicePreview.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Percent",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/invoice/PaymentHistory.tsx",
        "unusedImports": [
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/invoice/TemplateCustomizer.tsx",
        "unusedImports": [
          {
            "name": "Slider",
            "type": "named",
            "source": "@/components/ui/slider"
          },
          {
            "name": "ColorPicker",
            "type": "named",
            "source": "@/components/ui/color-picker"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/invoice/TemplateGallery.tsx",
        "unusedImports": [
          {
            "name": "DEFAULT_TEMPLATES",
            "type": "named",
            "source": "@/types/invoiceTemplate"
          },
          {
            "name": "Label",
            "type": "named",
            "source": "@/components/ui/label"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/invoice/TemplateManager.tsx",
        "unusedImports": [
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/invoice/templates/BaseInvoiceTemplate.tsx",
        "unusedImports": [
          {
            "name": "InvoiceRecipient",
            "type": "named",
            "source": "@/types/invoice"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/mobile/MobileNavigationLinks.tsx",
        "unusedImports": [
          {
            "name": "Home",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Crown",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/notifications/NotificationCenter.tsx",
        "unusedImports": [
          {
            "name": "Textarea",
            "type": "named",
            "source": "@/components/ui/textarea"
          },
          {
            "name": "MessageSquare",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Eye",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "MoreHorizontal",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Volume2",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "VolumeX",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Globe",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 140
      },
      {
        "file": "src/components/photographer-profile/PhotographerHeader.tsx",
        "unusedImports": [
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/photographer-profile/PhotographerPortfolio.tsx",
        "unusedImports": [
          {
            "name": "Image",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/profile/InterestedEventsSection.tsx",
        "unusedImports": [
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/profile/MediaUpload.tsx",
        "unusedImports": [
          {
            "name": "Select",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectContent",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectItem",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectTrigger",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectValue",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "Link",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/components/profile/TicketsSection.tsx",
        "unusedImports": [
          {
            "name": "Ticket",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/promoter/BookingManagementDashboard.tsx",
        "unusedImports": [
          {
            "name": "User",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Users",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "ChevronRight",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Mail",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Phone",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/components/promoter-profile/PromoterHeader.tsx",
        "unusedImports": [
          {
            "name": "Users",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/promoter-profile/PromoterProfileLayout.tsx",
        "unusedImports": [
          {
            "name": "Share",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "MessageCircle",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/spots/DeadlineTimer.tsx",
        "unusedImports": [
          {
            "name": "formatDistanceToNow",
            "type": "named",
            "source": "date-fns"
          },
          {
            "name": "isPast",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/tasks/ApplyTemplateDialog.tsx",
        "unusedImports": [
          {
            "name": "User",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Textarea",
            "type": "named",
            "source": "@/components/ui/textarea"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/components/ticket-sales/widgets/PlatformBreakdownWidget.tsx",
        "unusedImports": [
          {
            "name": "Legend",
            "type": "named",
            "source": "recharts"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ticket-sales/widgets/SalesVelocityChart.tsx",
        "unusedImports": [
          {
            "name": "LineChart",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "Line",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "BarChart",
            "type": "named",
            "source": "recharts"
          },
          {
            "name": "AreaChart",
            "type": "named",
            "source": "recharts"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/components/ticket-sales/widgets/SyncStatusMonitor.tsx",
        "unusedImports": [
          {
            "name": "format",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/tours/TourCollaborationManager.tsx",
        "unusedImports": [
          {
            "name": "Plus",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Mail",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Star",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Phone",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "MessageSquare",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Share2",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 140
      },
      {
        "file": "src/components/tours/TourPlanningWorkspace.tsx",
        "unusedImports": [
          {
            "name": "Select",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectContent",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectItem",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectTrigger",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "SelectValue",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "Building",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Plane",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Car",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Train",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Bus",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Hotel",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Utensils",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Music",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Settings",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Copy",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "ArrowRight",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "ArrowUp",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Target",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Zap",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Globe",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Phone",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Mail",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Save",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Download",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Upload",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 500
      },
      {
        "file": "src/components/ui/alert.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/badge.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/button.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/command.tsx",
        "unusedImports": [
          {
            "name": "type DialogProps",
            "type": "named",
            "source": "@radix-ui/react-dialog"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/dock.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/label.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/sheet.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/toast.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/toggle-group.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/components/ui/toggle.tsx",
        "unusedImports": [
          {
            "name": "type VariantProps",
            "type": "named",
            "source": "class-variance-authority"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/contexts/AuthContext.tsx",
        "unusedImports": [
          {
            "name": "useNavigate",
            "type": "named",
            "source": "react-router-dom"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useAuthOperations.ts",
        "unusedImports": [
          {
            "name": "useState",
            "type": "named",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useBulkInvoiceOperations.ts",
        "unusedImports": [
          {
            "name": "BulkOperation",
            "type": "named",
            "source": "@/types/bulkOperations"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useCreateEvent.ts",
        "unusedImports": [
          {
            "name": "handleEventCreationError",
            "type": "named",
            "source": "@/utils/eventErrorHandling"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useDesignSystem.ts",
        "unusedImports": [
          {
            "name": "DesignSystemSettings",
            "type": "named",
            "source": "@/types/designSystem"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useEarnings.ts",
        "unusedImports": [
          {
            "name": "useState",
            "type": "named",
            "source": "react"
          },
          {
            "name": "useEffect",
            "type": "named",
            "source": "react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/hooks/useGoogleMaps.ts",
        "unusedImports": [
          {
            "name": "useEffect",
            "type": "named",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useInvoices.ts",
        "unusedImports": [
          {
            "name": "format",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useOrganizations.ts",
        "unusedImports": [
          {
            "name": "useMutation",
            "type": "named",
            "source": "@tanstack/react-query"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useProfileAnalytics.ts",
        "unusedImports": [
          {
            "name": "getSessionDuration",
            "type": "named",
            "source": "@/utils/sessionUtils"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/hooks/useUpdateEvent.ts",
        "unusedImports": [
          {
            "name": "handleEventUpdateError",
            "type": "named",
            "source": "@/utils/eventErrorHandling"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/lib/api/hooks.ts",
        "unusedImports": [
          {
            "name": "UseMutationOptions",
            "type": "named",
            "source": "@tanstack/react-query"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/lib/utils.ts",
        "unusedImports": [
          {
            "name": "type ClassValue",
            "type": "named",
            "source": "clsx"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/AddGig.tsx",
        "unusedImports": [
          {
            "name": "Textarea",
            "type": "named",
            "source": "@/components/ui/textarea"
          },
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/pages/AdminDashboard.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/pages/AgencyManagement.tsx",
        "unusedImports": [
          {
            "name": "Settings",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/BookComedian.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/pages/ComedianProfile.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/ComedianProfileBySlug.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/CreateEvent.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/CustomizationSettings.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/Dashboard.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          },
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/pages/DesignSystem.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/EditEvent.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/EventApplicationPage.tsx",
        "unusedImports": [
          {
            "name": "Textarea",
            "type": "named",
            "source": "@/components/ui/textarea"
          },
          {
            "name": "Label",
            "type": "named",
            "source": "@/components/ui/label"
          },
          {
            "name": "Users",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Loader2",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/pages/EventDetailPublic.tsx",
        "unusedImports": [
          {
            "name": "useEvent",
            "type": "named",
            "source": "@/hooks/data/useEvents"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/EventDetails.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          },
          {
            "name": "Separator",
            "type": "named",
            "source": "@/components/ui/separator"
          },
          {
            "name": "Image",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/pages/EventSeries.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          },
          {
            "name": "Calendar",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Star",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 80
      },
      {
        "file": "src/pages/Index.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/Invoices.deprecated.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/Marketplace.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/Messages.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "Textarea",
            "type": "named",
            "source": "@/components/ui/textarea"
          },
          {
            "name": "SelectValue",
            "type": "named",
            "source": "@/components/ui/select"
          },
          {
            "name": "MoreVertical",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Star",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "src/pages/Notifications.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "TabsContent",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "X",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/pages/Organizer.tsx",
        "unusedImports": [
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Users",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/pages/PWASettings.tsx",
        "unusedImports": [
          {
            "name": "Switch",
            "type": "named",
            "source": "@/components/ui/switch"
          },
          {
            "name": "Download",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "src/pages/PhotographerProfile.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/Photographers.tsx",
        "unusedImports": [
          {
            "name": "Video",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "DollarSign",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/pages/Pricing.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/PromoterSettings.tsx",
        "unusedImports": [
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/pages/SpotConfirmationPage.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/pages/TaskDashboard.tsx",
        "unusedImports": [
          {
            "name": "Card",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardContent",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardDescription",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardHeader",
            "type": "named",
            "source": "@/components/ui/card"
          },
          {
            "name": "CardTitle",
            "type": "named",
            "source": "@/components/ui/card"
          }
        ],
        "potentialSavings": 100
      },
      {
        "file": "src/pages/TourDashboard.tsx",
        "unusedImports": [
          {
            "name": "Tabs",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "TabsContent",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "TabsList",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "TabsTrigger",
            "type": "named",
            "source": "@/components/ui/tabs"
          },
          {
            "name": "DialogTrigger",
            "type": "named",
            "source": "@/components/ui/dialog"
          },
          {
            "name": "MapPin",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "TrendingDown",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Plane",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Building",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Settings",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Edit",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Share2",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Download",
            "type": "named",
            "source": "lucide-react"
          },
          {
            "name": "Upload",
            "type": "named",
            "source": "lucide-react"
          }
        ],
        "potentialSavings": 280
      },
      {
        "file": "src/services/applicationService.ts",
        "unusedImports": [
          {
            "name": "ApplicationFilters",
            "type": "named",
            "source": "@/types/application"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/services/bulkInvoiceService.ts",
        "unusedImports": [
          {
            "name": "pdfRateLimiter",
            "type": "named",
            "source": "@/utils/bulkOperationOptimizations"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/services/deadlineMonitoringService.ts",
        "unusedImports": [
          {
            "name": "differenceInMinutes",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/services/invoiceService.ts",
        "unusedImports": [
          {
            "name": "InvoiceRecipient",
            "type": "named",
            "source": "@/types/invoice"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/services/notificationService.ts",
        "unusedImports": [
          {
            "name": "getEmailTemplateMetadata",
            "type": "named",
            "source": "@/templates/email"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/utils/eventErrorHandling.ts",
        "unusedImports": [
          {
            "name": "handleEventAuthError",
            "type": "named",
            "source": "./eventAuthHandler"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/utils/eventValidation.enhanced.ts",
        "unusedImports": [
          {
            "name": "z",
            "type": "named",
            "source": "zod"
          },
          {
            "name": "CustomDate",
            "type": "named",
            "source": "@/types/eventTypes"
          },
          {
            "name": "addHours",
            "type": "named",
            "source": "date-fns"
          }
        ],
        "potentialSavings": 60
      },
      {
        "file": "src/utils/seo/dynamicMeta.ts",
        "unusedImports": [
          {
            "name": "MetaTagsProps",
            "type": "named",
            "source": "./metaTags"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "src/utils/seo/metaTags.ts",
        "unusedImports": [
          {
            "name": "Helmet",
            "type": "named",
            "source": "react-helmet-async"
          },
          {
            "name": "getOptimizedImageUrl",
            "type": "named",
            "source": "./imageOptimization"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "test-invoice-ui-flow.js",
        "unusedImports": [
          {
            "name": "join",
            "type": "named",
            "source": "path"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "tests/ApplicationForm.test.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          },
          {
            "name": "ApplicationFormData",
            "type": "named",
            "source": "@/components/ApplicationForm"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "tests/application-form-integration.test.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          },
          {
            "name": "ApplicationFormData",
            "type": "named",
            "source": "@/types/application"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "tests/application-workflow.test.ts",
        "unusedImports": [
          {
            "name": "beforeEach",
            "type": "named",
            "source": "vitest"
          },
          {
            "name": "vi",
            "type": "named",
            "source": "vitest"
          },
          {
            "name": "screen",
            "type": "named",
            "source": "@testing-library/react"
          },
          {
            "name": "fireEvent",
            "type": "named",
            "source": "@testing-library/react"
          },
          {
            "name": "waitFor",
            "type": "named",
            "source": "@testing-library/react"
          },
          {
            "name": "userEvent",
            "type": "default",
            "source": "@testing-library/user-event"
          }
        ],
        "potentialSavings": 120
      },
      {
        "file": "tests/bulkInvoiceOperations.test.ts",
        "unusedImports": [
          {
            "name": "afterEach",
            "type": "named",
            "source": "@jest/globals"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "tests/event-validation.test.ts",
        "unusedImports": [
          {
            "name": "beforeEach",
            "type": "named",
            "source": "@jest/globals"
          },
          {
            "name": "CustomDate",
            "type": "named",
            "source": "@/types/eventTypes"
          }
        ],
        "potentialSavings": 40
      },
      {
        "file": "tests/eventErrorHandling.test.ts",
        "unusedImports": [
          {
            "name": "beforeEach",
            "type": "named",
            "source": "@jest/globals"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "tests/imageOptimization.test.tsx",
        "unusedImports": [
          {
            "name": "React",
            "type": "default",
            "source": "react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "tests/integration/application-flow.test.tsx",
        "unusedImports": [
          {
            "name": "fireEvent",
            "type": "named",
            "source": "@testing-library/react"
          }
        ],
        "potentialSavings": 20
      },
      {
        "file": "tests/invoice-operations.test.ts",
        "unusedImports": [
          {
            "name": "CreateInvoiceRequest",
            "type": "named",
            "source": "@/types/invoice"
          }
        ],
        "potentialSavings": 20
      }
    ],
    "bundleAnalysis": {
      "error": "Build failed with code 137"
    },
    "testCoverage": {
      "overallCoverage": 0,
      "error": "Could not parse coverage output",
      "rawOutput": "\n> vite_react_shadcn_ts@0.0.0 test:coverage\n> jest --coverage\n\n"
    }
  },
  "recommendations": [
    {
      "category": "Code Cleanup",
      "priority": "High",
      "action": "Remove 3 duplicate files",
      "impact": "Reduce codebase size and maintenance overhead"
    },
    {
      "category": "Component Architecture",
      "priority": "Medium",
      "action": "Refactor 269 complex components",
      "impact": "Improve maintainability and performance"
    },
    {
      "category": "Bundle Optimization",
      "priority": "Medium",
      "action": "Clean up unused imports in 171 files",
      "impact": "Reduce bundle size and build time"
    },
    {
      "category": "Quality Assurance",
      "priority": "High",
      "action": "Increase test coverage from 0% to 75%+",
      "impact": "Improve code reliability and catch bugs earlier"
    }
  ]
}