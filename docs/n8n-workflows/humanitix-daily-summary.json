{
  "name": "Humanitix Daily Sales Summary",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "cronExpression": "0 9 * * *"
            }
          ]
        },
        "timezone": "Australia/Sydney"
      },
      "id": "schedule-daily-summary",
      "name": "Daily at 9 AM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "databaseId": "={{ $env.NOTION_DATABASE_ID }}",
        "filterType": "manual",
        "matchType": "anyFilter",
        "filters": {
          "conditions": [
            {
              "key": "Purchase Date",
              "condition": "date",
              "operation": "equals",
              "value": "={{ $now.minus({days: 1}).toFormat('yyyy-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "get-yesterday-sales",
      "name": "Get Yesterday's Sales",
      "type": "@notionhq/notion-mcp-server.queryDatabase",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Calculate daily sales summary\nconst sales = $input.all();\nlet totalRevenue = 0;\nlet totalTickets = 0;\nlet eventCount = 0;\nconst eventSummary = {};\nconst platformSummary = {};\n\nfor (const sale of sales) {\n  const properties = sale.json.properties;\n  \n  // Extract data from Notion properties\n  const amount = properties.Amount?.number || 0;\n  const quantity = properties.Quantity?.number || 0;\n  const eventName = properties['Event Name']?.title?.[0]?.text?.content || 'Unknown';\n  const platform = properties.Platform?.select?.name || 'Unknown';\n  \n  totalRevenue += amount;\n  totalTickets += quantity;\n  \n  // Track by event\n  if (!eventSummary[eventName]) {\n    eventSummary[eventName] = { revenue: 0, tickets: 0 };\n    eventCount++;\n  }\n  eventSummary[eventName].revenue += amount;\n  eventSummary[eventName].tickets += quantity;\n  \n  // Track by platform\n  if (!platformSummary[platform]) {\n    platformSummary[platform] = { revenue: 0, tickets: 0 };\n  }\n  platformSummary[platform].revenue += amount;\n  platformSummary[platform].tickets += quantity;\n}\n\n// Generate summary text\nconst yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nconst dateStr = yesterday.toLocaleDateString('en-AU');\n\nlet summary = `ðŸ“Š *Daily Sales Summary - ${dateStr}*\\n\\n`;\nsummary += `ðŸ’° **Total Revenue:** $${totalRevenue.toFixed(2)} AUD\\n`;\nsummary += `ðŸŽ« **Total Tickets:** ${totalTickets}\\n`;\nsummary += `ðŸŽ­ **Events:** ${eventCount}\\n\\n`;\n\nif (Object.keys(eventSummary).length > 0) {\n  summary += `**By Event:**\\n`;\n  for (const [event, data] of Object.entries(eventSummary)) {\n    summary += `â€¢ ${event}: ${data.tickets} tickets, $${data.revenue.toFixed(2)}\\n`;\n  }\n  summary += `\\n`;\n}\n\nif (Object.keys(platformSummary).length > 0) {\n  summary += `**By Platform:**\\n`;\n  for (const [platform, data] of Object.entries(platformSummary)) {\n    summary += `â€¢ ${platform}: ${data.tickets} tickets, $${data.revenue.toFixed(2)}\\n`;\n  }\n}\n\nif (totalRevenue === 0) {\n  summary = `ðŸ“Š *Daily Sales Summary - ${dateStr}*\\n\\nðŸ’¤ No sales recorded yesterday.`;\n}\n\nreturn [{\n  json: {\n    summary,\n    totalRevenue,\n    totalTickets,\n    eventCount,\n    date: dateStr,\n    eventSummary,\n    platformSummary\n  }\n}];"
      },
      "id": "calculate-summary",
      "name": "Calculate Summary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "content": "={{ $json.summary }}",
        "options": {}
      },
      "id": "display-summary",
      "name": "Display Summary",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Daily at 9 AM": {
      "main": [
        [
          {
            "node": "Get Yesterday's Sales",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Yesterday's Sales": {
      "main": [
        [
          {
            "node": "Calculate Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Summary": {
      "main": [
        [
          {
            "node": "Display Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "tags": [
    {
      "id": "tag1",
      "name": "humanitix"
    },
    {
      "id": "tag2",
      "name": "daily-summary"
    },
    {
      "id": "tag3",
      "name": "reporting"
    }
  ],
  "triggerCount": 1,
  "versionId": "1"
}