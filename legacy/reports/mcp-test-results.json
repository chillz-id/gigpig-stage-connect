{
  "timestamp": "2025-09-09T21:55:58.042Z",
  "total_servers": 15,
  "results": {
    "supabase": {
      "name": "supabase",
      "status": "working",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@supabase/mcp-server-supabase@latest",
          "--project-ref=pdikjpfulhhpqpxzpgtu"
        ],
        "env": {
          "SUPABASE_ACCESS_TOKEN": "${SUPABASE_SERVICE_KEY}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "SUPABASE_ACCESS_TOKEN"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [],
      "env_status": "complete",
      "credentials": {
        "url": true,
        "anon_key": true,
        "service_key": true
      }
    },
    "github": {
      "name": "github",
      "status": "working",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github@latest"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "GITHUB_PERSONAL_ACCESS_TOKEN"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [],
      "env_status": "complete",
      "credentials": {
        "token": true
      }
    },
    "notion": {
      "name": "notion",
      "status": "working",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@notionhq/notion-mcp-server@latest"
        ],
        "env": {
          "NOTION_TOKEN": "${NOTION_TOKEN}"
        }
      },
      "duration": 1,
      "error": null,
      "tools": [],
      "environment_vars": [
        "NOTION_TOKEN"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [],
      "env_status": "complete",
      "credentials": {
        "token": true
      }
    },
    "slack": {
      "name": "slack",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-slack@latest"
        ],
        "env": {
          "SLACK_BOT_TOKEN": "${SLACK_BOT_TOKEN}",
          "SLACK_APP_TOKEN": "${SLACK_APP_TOKEN}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "SLACK_BOT_TOKEN",
        "SLACK_APP_TOKEN"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [],
      "env_status": "complete",
      "credentials": {
        "bot_token": true,
        "app_token": true
      },
      "notes": "Credentials present - needs functional testing"
    },
    "metricool": {
      "name": "metricool",
      "status": "configured",
      "config": {
        "command": "uvx",
        "args": [
          "--upgrade",
          "mcp-metricool"
        ],
        "env": {
          "METRICOOL_USER_TOKEN": "${METRICOOL_USER_TOKEN}",
          "METRICOOL_USER_ID": "${METRICOOL_USER_ID}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "METRICOOL_USER_TOKEN",
        "METRICOOL_USER_ID"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [],
      "env_status": "complete",
      "notes": "Basic configuration test only"
    },
    "xero": {
      "name": "xero",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@xeroapi/xero-mcp-server@latest"
        ],
        "env": {
          "XERO_CLIENT_ID": "{{XERO_CLIENT_ID}}",
          "XERO_CLIENT_SECRET": "{{XERO_CLIENT_SECRET}}",
          "XERO_SCOPES": "accounting.transactions accounting.contacts accounting.settings offline_access",
          "XERO_REDIRECT_URI": "https://agents.standupsydney.com/auth/xero-callback"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "XERO_CLIENT_ID",
        "XERO_CLIENT_SECRET",
        "XERO_SCOPES",
        "XERO_REDIRECT_URI"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [
        "XERO_CLIENT_ID",
        "XERO_CLIENT_SECRET"
      ],
      "env_status": "complete",
      "notes": "Basic configuration test only"
    },
    "canva": {
      "name": "canva",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@canva/cli@latest",
          "mcp"
        ]
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [],
      "transport": "stdio",
      "config_valid": true,
      "env_status": "no_env_vars",
      "notes": "Basic configuration test only"
    },
    "context7": {
      "name": "context7",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@upstash/context7-mcp"
        ]
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [],
      "transport": "stdio",
      "config_valid": true,
      "env_status": "no_env_vars",
      "notes": "Basic configuration test only"
    },
    "puppeteer": {
      "name": "puppeteer",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-puppeteer@latest"
        ]
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [],
      "transport": "stdio",
      "config_valid": true,
      "env_status": "no_env_vars",
      "notes": "Basic configuration test only"
    },
    "filesystem": {
      "name": "filesystem",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem@latest",
          "/root/agents"
        ]
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [],
      "transport": "stdio",
      "config_valid": true,
      "env_status": "no_env_vars",
      "notes": "Basic configuration test only"
    },
    "brave-search": {
      "name": "brave-search",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-brave-search@latest"
        ],
        "env": {
          "BRAVE_API_KEY": "{{BRAVE_API_KEY}}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "BRAVE_API_KEY"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [
        "BRAVE_API_KEY"
      ],
      "env_status": "complete",
      "notes": "Basic configuration test only"
    },
    "@magicuidesign/mcp": {
      "name": "@magicuidesign/mcp",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@magicuidesign/mcp@latest"
        ]
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [],
      "transport": "stdio",
      "config_valid": true,
      "env_status": "no_env_vars",
      "notes": "Basic configuration test only"
    },
    "apify": {
      "name": "apify",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "@apify/actors-mcp-server@latest"
        ],
        "env": {
          "APIFY_API_TOKEN": "${APIFY_TOKEN}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "APIFY_API_TOKEN"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [],
      "env_placeholders": [],
      "env_status": "complete",
      "notes": "Basic configuration test only"
    },
    "task-master": {
      "name": "task-master",
      "status": "configured",
      "config": {
        "command": "npx",
        "args": [
          "-y",
          "--package=task-master-ai",
          "task-master-ai"
        ],
        "env": {
          "ANTHROPIC_API_KEY": "${ANTHROPIC_API_KEY}",
          "OPENAI_API_KEY": "${OPENAI_API_KEY}",
          "PERPLEXITY_API_KEY": "${PERPLEXITY_API_KEY}",
          "GOOGLE_API_KEY": "${GOOGLE_API_KEY}"
        }
      },
      "duration": 1,
      "error": null,
      "tools": [],
      "environment_vars": [
        "ANTHROPIC_API_KEY",
        "OPENAI_API_KEY",
        "PERPLEXITY_API_KEY",
        "GOOGLE_API_KEY"
      ],
      "transport": "stdio",
      "config_valid": true,
      "env_missing": [
        "GOOGLE_API_KEY"
      ],
      "env_placeholders": [],
      "env_status": "incomplete",
      "notes": "Basic configuration test only"
    },
    "linear": {
      "name": "linear",
      "status": "configured",
      "config": {
        "transport": "sse",
        "url": "https://mcp.linear.app/sse",
        "env": {
          "LINEAR_API_KEY": "${LINEAR_API_KEY}"
        }
      },
      "duration": 0,
      "error": null,
      "tools": [],
      "environment_vars": [
        "LINEAR_API_KEY"
      ],
      "transport": "sse",
      "config_valid": true,
      "env_missing": [
        "LINEAR_API_KEY"
      ],
      "env_placeholders": [],
      "env_status": "incomplete",
      "notes": "No Linear API key - using SSE transport"
    }
  },
  "summary": {
    "working": 3,
    "configured": 12
  },
  "recommendations": [
    {
      "server": "slack",
      "priority": "medium",
      "action": "Run functional tests to verify working status",
      "type": "test"
    },
    {
      "server": "metricool",
      "priority": "medium",
      "action": "Run functional tests to verify working status",
      "type": "test"
    },
    {
      "server": "metricool",
      "priority": "low",
      "action": "Create automation workflows to utilize server",
      "type": "activate"
    },
    {
      "server": "xero",
      "priority": "medium",
      "action": "Run functional tests to verify working status",
      "type": "test"
    },
    {
      "server": "canva",
      "priority": "low",
      "action": "Create automation workflows to utilize server",
      "type": "activate"
    },
    {
      "server": "apify",
      "priority": "low",
      "action": "Create automation workflows to utilize server",
      "type": "activate"
    }
  ]
}